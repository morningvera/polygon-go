{
  "openapi": "3.0.3",
  "info": {
    "title": "Polygon API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.polygon.io",
      "description": "Polygon Platform API"
    },
    {
      "url": "https://api.staging.polygon.io",
      "description": "Polygon Platform Staging API"
    }
  ],
  "x-polygon-order": {
    "stocks": {
      "market": [
        "/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}",
        "/v2/aggs/grouped/locale/us/market/stocks/{date}",
        "/v1/open-close/{stocksTicker}/{date}",
        "/v2/aggs/ticker/{stocksTicker}/prev",
        "/v3/trades/{stockTicker}",
        "/v2/ticks/stocks/trades/{ticker}/{date}",
        "/v2/last/trade/{stocksTicker}",
        "/v3/quotes/{stockTicker}",
        "/v2/ticks/stocks/nbbo/{ticker}/{date}",
        "/v2/last/nbbo/{stocksTicker}",
        "/v2/snapshot/locale/us/markets/stocks/tickers",
        "/v2/snapshot/locale/us/markets/stocks/{direction}",
        "/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}"
      ],
      "reference": [
        "/v3/reference/tickers",
        "/v1/meta/symbols/{stocksTicker}/company",
        "/v3/reference/tickers/{ticker}",
        "/v2/reference/news",
        "/v3/reference/tickers/types",
        "/v1/marketstatus/upcoming",
        "/v1/marketstatus/now",
        "/v1/reference/sec/filings",
        "/v1/reference/sec/filings/{filing_id}",
        "/v1/reference/sec/filings/{filing_id}/files",
        "/v1/reference/sec/filings/{filing_id}/files/{file_id}",
        "/v3/reference/splits",
        "/v3/reference/dividends",
        "/vX/reference/financials",
        "/v3/reference/conditions",
        "/v3/reference/exchanges"
      ]
    },
    "options": {
      "market": [
        "/v2/aggs/ticker/{optionsTicker}/range/{multiplier}/{timespan}/{from}/{to}",
        "/v1/open-close/{optionsTicker}/{date}",
        "/v2/aggs/ticker/{optionsTicker}/prev",
        "/v3/trades/{optionsTicker}",
        "/v2/last/trade/{optionsTicker}",
        "/v3/quotes/{optionsTicker}",
        "/v3/snapshot/options/{underlyingAsset}/{optionContract}",
        "/v3/snapshot/options/{underlyingAsset}"
      ],
      "reference": [
        "/v3/reference/options/contracts/{options_ticker}",
        "/v3/reference/options/contracts",
        "/v3/reference/tickers",
        "/v1/meta/symbols/{stocksTicker}/company",
        "/v3/reference/tickers/{ticker}",
        "/v2/reference/news",
        "/v3/reference/tickers/types",
        "/v1/marketstatus/upcoming",
        "/v1/marketstatus/now",
        "/v3/reference/conditions",
        "/v3/reference/exchanges"
      ]
    },
    "fx": {
      "market": [
        "/v2/aggs/ticker/{forexTicker}/range/{multiplier}/{timespan}/{from}/{to}",
        "/v2/aggs/grouped/locale/global/market/fx/{date}",
        "/v2/aggs/ticker/{forexTicker}/prev",
        "/v3/quotes/{fxTicker}",
        "/v1/historic/forex/{from}/{to}/{date}",
        "/v1/last_quote/currencies/{from}/{to}",
        "/v1/conversion/{from}/{to}",
        "/v2/snapshot/locale/global/markets/forex/tickers",
        "/v2/snapshot/locale/global/markets/forex/{direction}",
        "/v2/snapshot/locale/global/markets/forex/tickers/{ticker}"
      ],
      "reference": [
        "/v3/reference/tickers",
        "/v1/marketstatus/upcoming",
        "/v1/marketstatus/now",
        "/v3/reference/conditions",
        "/v3/reference/exchanges"
      ]
    },
    "crypto": {
      "market": [
        "/v2/aggs/ticker/{cryptoTicker}/range/{multiplier}/{timespan}/{from}/{to}",
        "/v2/aggs/grouped/locale/global/market/crypto/{date}",
        "/v1/open-close/crypto/{from}/{to}/{date}",
        "/v2/aggs/ticker/{cryptoTicker}/prev",
        "/v3/trades/{cryptoTicker}",
        "/v1/historic/crypto/{from}/{to}/{date}",
        "/v1/last/crypto/{from}/{to}",
        "/v2/snapshot/locale/global/markets/crypto/tickers",
        "/v2/snapshot/locale/global/markets/crypto/{direction}",
        "/v2/snapshot/locale/global/markets/crypto/tickers/{ticker}",
        "/v2/snapshot/locale/global/markets/crypto/tickers/{ticker}/book"
      ],
      "reference": [
        "/v3/reference/tickers",
        "/v1/marketstatus/upcoming",
        "/v1/marketstatus/now",
        "/v3/reference/conditions",
        "/v3/reference/exchanges"
      ]
    }
  },
  "tags": [
    {
      "name": "reference",
      "description": "Reference API",
      "x-polygon-sub-tags": [
        "tickers:list",
        "tickers:types",
        "tickers:get",
        "options:contracts:list",
        "news",
        "tickers",
        "stocks",
        "sec:filings",
        "sec:filing",
        "sec:filing:files",
        "sec:filing:file",
        "stocks:market",
        "conditions",
        "stocks:meta:exchanges",
        "crypto",
        "exchanges"
      ]
    },
    {
      "name": "stocks",
      "description": "Stocks API",
      "x-polygon-sub-tags": [
        "trades",
        "quotes",
        "last:trade",
        "last:quote",
        "open-close",
        "aggregates",
        "snapshot"
      ]
    },
    {
      "name": "options",
      "description": "Options API",
      "x-polygon-sub-tags": [
        "trades",
        "quotes",
        "last:trade",
        "last:quote",
        "open-close",
        "aggregates",
        "snapshot"
      ]
    },
    {
      "name": "fx",
      "description": "Forex API",
      "x-polygon-sub-tags": [
        "trades",
        "quotes",
        "conversion",
        "last:trade",
        "last:quote",
        "aggregates",
        "snapshot"
      ]
    },
    {
      "name": "crypto",
      "description": "Crypto API",
      "x-polygon-sub-tags": [
        "trades",
        "last:trade",
        "open-close",
        "aggregates",
        "snapshot"
      ]
    }
  ],
  "paths": {
    "/v3/reference/tickers": {
      "get": {
        "summary": "Tickers",
        "description": "Query all ticker symbols which are supported by Polygon.io. This API currently includes Stocks/Equities, Crypto, and Forex.\n",
        "tags": [
          "reference:tickers:list"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a ticker symbol.\nDefaults to empty string which queries all tickers.\n",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-polygon-filter-field": {
              "range": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Specify the type of the tickers. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).\nDefaults to empty string which queries all types.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CS",
                "ADRC",
                "ADRP",
                "ADRR",
                "UNIT",
                "RIGHT",
                "PFD",
                "FUND",
                "SP",
                "WARRANT",
                "INDEX",
                "ETF",
                "ETN"
              ]
            }
          },
          {
            "name": "market",
            "in": "query",
            "description": "Filter by market type. By default all markets are included.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "stocks",
                "crypto",
                "fx"
              ]
            }
          },
          {
            "name": "exchange",
            "in": "query",
            "description": "Specify the primary exchange of the asset in the ISO code format. Find more information about the ISO codes [at the ISO org website](https://www.iso20022.org/market-identifier-codes).\nDefaults to empty string which queries all exchanges.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cusip",
            "in": "query",
            "description": "Specify the CUSIP code of the asset you want to search for. Find more information about CUSIP codes [at their website](https://www.cusip.com/identifiers.html#/CUSIP).\nDefaults to empty string which queries all CUSIPs.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cik",
            "in": "query",
            "description": "Specify the CIK of the asset you want to search for. Find more information about CIK codes [at their website](https://www.sec.gov/edgar/searchedgar/cik.htm).\nDefaults to empty string which queries all CIKs.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Specify a point in time to retrieve tickers available on that date.\nDefaults to the most recent available date.\n",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                }
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search for terms within the ticker and/or company name.\n",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Specify if the tickers returned should be actively traded on the queried date. Default is true.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort the results on. Default is ticker.\nIf the `search` query parameter is present, `sort` is ignored and results are ordered by relevance.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ticker",
                "name",
                "market",
                "locale",
                "primary_exchange",
                "type",
                "currency_symbol",
                "currency_name",
                "base_currency_symbol",
                "base_currency_name",
                "cik",
                "composite_figi",
                "share_class_figi",
                "last_updated_utc",
                "delisted_utc"
              ]
            },
            "example": "ticker"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order to sort the results on. Default is asc (ascending).\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "example": "asc"
          },
          {
            "example": 10,
            "required": false,
            "name": "limit",
            "in": "query",
            "description": "Limit the size of the response, default is 100 and max is 1000.\n\nIf your query returns more than the max limit and you want to retrieve the next page of results,\nsee the `next_url` response attribute.\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference Tickers.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "description": "An array of tickers that match your query.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.                                                                                                                                                                                                                                                                                                   \n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n"
                              },
                              "market": {
                                "type": "string",
                                "description": "The market type of the asset.",
                                "enum": [
                                  "stocks",
                                  "crypto",
                                  "fx"
                                ]
                              },
                              "locale": {
                                "type": "string",
                                "description": "The locale of the asset.",
                                "enum": [
                                  "us",
                                  "global"
                                ]
                              },
                              "primary_exchange": {
                                "type": "string",
                                "description": "The ISO code of the primary listing exchange for this asset."
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types)."
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether or not the asset is actively traded. False means the asset has been delisted."
                              },
                              "currency_name": {
                                "type": "string",
                                "description": "The name of the currency that this asset is traded with."
                              },
                              "cik": {
                                "type": "string",
                                "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key)."
                              },
                              "composite_figi": {
                                "type": "string",
                                "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
                              },
                              "share_class_figi": {
                                "type": "string",
                                "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
                              },
                              "last_updated_utc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The information is accurate up to this time."
                              },
                              "delisted_utc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The last date that the asset was traded."
                              }
                            },
                            "required": [
                              "ticker",
                              "name",
                              "market",
                              "locale"
                            ]
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "next_url": {
                          "type": "string",
                          "description": "If present, this value can be used to fetch the next page of data."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "count": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "results": [
                    {
                      "ticker": "A",
                      "name": "Agilent Technologies Inc.",
                      "market": "stocks",
                      "locale": "us",
                      "primary_exchange": "XNYS",
                      "type": "CS",
                      "active": true,
                      "currency_name": "usd",
                      "cik": "0001090872",
                      "composite_figi": "BBG000BWQYZ5",
                      "share_class_figi": "BBG001SCTQY4",
                      "last_updated_utc": "2021-04-25T00:00:00Z"
                    }
                  ],
                  "status": "OK",
                  "request_id": "e70013d92930de90e089dc8fa098888e",
                  "count": 1,
                  "next_url": "https://api.polygon.io/v3/reference/tickers?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "reference",
          "description": "Reference data"
        }
      }
    },
    "/v3/reference/tickers/{ticker}": {
      "get": {
        "summary": "Ticker Details v3",
        "description": "Get a single ticker supported by Polygon.io. This response will have detailed information about the ticker and the company behind it.\n",
        "tags": [
          "reference:tickers:get"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The ticker symbol of the asset.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          },
          {
            "name": "date",
            "in": "query",
            "description": "Specify a point in time to get information about the ticker available on that date.\nWhen retrieving information from SEC filings, we compare this date with the period of report date on the SEC filing.\n\nFor example, consider an SEC filing submitted by AAPL on 2019-07-31, with a period of report date ending on 2019-06-29.\nThat means that the filing was submitted on 2019-07-31, but the filing was created based on information from 2019-06-29.\nIf you were to query for AAPL details on 2019-06-29, the ticker details would include information from the SEC filing.\n\nDefaults to the most recent available date.\n",
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reference Tickers.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "object",
                          "description": "Ticker with details.\n",
                          "properties": {
                            "ticker": {
                              "type": "string",
                              "description": "The exchange symbol that this item is traded under."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n"
                            },
                            "market": {
                              "type": "string",
                              "description": "The market type of the asset.",
                              "enum": [
                                "stocks",
                                "crypto",
                                "fx"
                              ]
                            },
                            "locale": {
                              "type": "string",
                              "description": "The locale of the asset.",
                              "enum": [
                                "us",
                                "global"
                              ]
                            },
                            "primary_exchange": {
                              "type": "string",
                              "description": "The ISO code of the primary listing exchange for this asset."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types)."
                            },
                            "active": {
                              "type": "boolean",
                              "description": "Whether or not the asset is actively traded. False means the asset has been delisted."
                            },
                            "currency_name": {
                              "type": "string",
                              "description": "The name of the currency that this asset is traded with."
                            },
                            "cik": {
                              "type": "string",
                              "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key)."
                            },
                            "composite_figi": {
                              "type": "string",
                              "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
                            },
                            "share_class_figi": {
                              "type": "string",
                              "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
                            },
                            "delisted_utc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The last date that the asset was traded."
                            },
                            "share_class_shares_outstanding": {
                              "type": "number",
                              "format": "double",
                              "description": "The recorded number of outstanding shares for this particular share class."
                            },
                            "weighted_shares_outstanding": {
                              "type": "number",
                              "format": "double",
                              "description": "The shares outstanding calculated assuming all shares of other share classes are converted to this share class.\n"
                            },
                            "market_cap": {
                              "type": "number",
                              "format": "double",
                              "description": "The most recent close price of the ticker multiplied by weighted outstanding shares."
                            },
                            "phone_number": {
                              "type": "string",
                              "description": "The phone number for the company behind this ticker."
                            },
                            "address": {
                              "type": "object",
                              "properties": {
                                "address1": {
                                  "type": "string",
                                  "description": "The first line of the company's headquarters address."
                                },
                                "city": {
                                  "type": "string",
                                  "description": "The city of the company's headquarters address."
                                },
                                "state": {
                                  "type": "string",
                                  "description": "The state of the company's headquarters address."
                                },
                                "postal_code": {
                                  "type": "string",
                                  "description": "The postal code of the company's headquarters address."
                                }
                              }
                            },
                            "sic_code": {
                              "type": "string",
                              "description": "The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.\n"
                            },
                            "sic_description": {
                              "type": "string",
                              "description": "A description of this ticker's SIC code."
                            },
                            "ticker_root": {
                              "type": "string",
                              "description": "The root of a specified ticker. For example, the root of BRK.A is BRK."
                            },
                            "ticker_suffix": {
                              "type": "string",
                              "description": "The suffix of a specified ticker. For example, the suffix of BRK.A is A."
                            },
                            "total_employees": {
                              "type": "number",
                              "description": "The approximate number of employees for the company."
                            },
                            "list_date": {
                              "type": "string",
                              "description": "The date that the symbol was first publicly listed in the format YYYY-MM-DD."
                            },
                            "homepage_url": {
                              "type": "string",
                              "description": "The URL of the company's website homepage."
                            },
                            "description": {
                              "type": "string",
                              "description": "A description of the company and what they do/offer."
                            },
                            "branding": {
                              "type": "object",
                              "properties": {
                                "logo_url": {
                                  "type": "string",
                                  "description": "A link to this ticker's company's logo.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n"
                                },
                                "icon_url": {
                                  "type": "string",
                                  "description": "A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n"
                                }
                              }
                            }
                          },
                          "required": [
                            "ticker",
                            "name",
                            "market",
                            "locale",
                            "active",
                            "currency_name"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "count": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "results": {
                    "ticker": "AAPL",
                    "name": "Apple Inc.",
                    "market": "stocks",
                    "locale": "us",
                    "primary_exchange": "XNAS",
                    "type": "CS",
                    "active": true,
                    "currency_name": "usd",
                    "cik": "0000320193",
                    "composite_figi": "BBG000B9XRY4",
                    "share_class_figi": "BBG001S5N8V8",
                    "share_class_shares_outstanding": 16406400000,
                    "weighted_shares_outstanding": 16334371000,
                    "market_cap": 2771126040150,
                    "phone_number": "(408) 996-1010",
                    "address": {
                      "address1": "One Apple Park Way",
                      "city": "Cupertino",
                      "state": "CA",
                      "postal_code": "95014"
                    },
                    "sic_code": "3571",
                    "sic_description": "ELECTRONIC COMPUTERS",
                    "ticker_root": "AAPL",
                    "total_employees": 154000,
                    "list_date": "1980-12-12",
                    "homepage_url": "https://www.apple.com",
                    "description": "Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), AirPods, and TV boxes (Apple TV), among others. The iPhone makes up the majority of Apple's total revenue. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Card, and Apple Pay, among others. Apple's products run internally developed software and semiconductors, and the firm is well known for its integration of hardware, software and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers. The company generates roughly 40% of its revenue from the Americas, with the remainder earned internationally.",
                    "branding": {
                      "logo_url": "https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_logo.svg",
                      "icon_url": "https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_icon.png"
                    }
                  },
                  "status": "OK",
                  "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "reference",
          "description": "Reference data"
        }
      }
    },
    "/v2/reference/news": {
      "get": {
        "summary": "Ticker News",
        "description": "Get the most recent news articles relating to a stock ticker symbol,\nincluding a summary of the article and a link to the original source.\n",
        "tags": [
          "reference:tickers"
        ],
        "parameters": [
          {
            "example": 10,
            "name": "limit",
            "in": "query",
            "description": "Limit the size of the response, default is 100 and max is 1000.\n\nIf your query returns more than the max limit and you want to retrieve the next page of results,\nsee the `next_url` response attribute.\n",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "example": "descending",
            "name": "order",
            "in": "query",
            "description": "Order the results in ascending or descending order.\n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "ascending",
                "desc",
                "descending"
              ],
              "default": "ascending"
            }
          },
          {
            "schema": {
              "enum": [
                "published_utc"
              ],
              "default": "published_utc"
            },
            "example": "published_utc",
            "name": "sort",
            "in": "query",
            "description": "The field key to sort the results on.\n"
          },
          {
            "name": "ticker",
            "schema": {
              "type": "string",
              "description": "The exchange symbol that this item is traded under."
            },
            "x-polygon-filter-field": {
              "range": true
            },
            "in": "query",
            "description": "Return results where this field equals the value.\n"
          },
          {
            "name": "published_utc",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                }
              ]
            },
            "x-polygon-filter-field": {
              "range": true
            },
            "in": "query",
            "description": "Return results where this field equals the value.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of news articles.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "publisher",
                              "title",
                              "author",
                              "published_utc",
                              "article_url",
                              "tickers"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier for the article.\n"
                              },
                              "publisher": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "logo_url",
                                  "homepage_url"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The publisher's name.\n"
                                  },
                                  "logo_url": {
                                    "type": "string",
                                    "format": "url",
                                    "description": "The publisher's logo URL.\n"
                                  },
                                  "homepage_url": {
                                    "type": "string",
                                    "format": "url",
                                    "description": "The publisher's homepage URL.\n"
                                  },
                                  "favicon_url": {
                                    "type": "string",
                                    "format": "url",
                                    "description": "The publisher's homepage favicon URL.\n"
                                  }
                                }
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the news article.\n"
                              },
                              "author": {
                                "type": "string",
                                "description": "The article's author.\n"
                              },
                              "published_utc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date the article was published on.\n"
                              },
                              "article_url": {
                                "type": "string",
                                "format": "url",
                                "description": "A link to the news article.\n"
                              },
                              "tickers": {
                                "type": "array",
                                "description": "The ticker symbols associated with the article.\n",
                                "items": {
                                  "type": "string",
                                  "description": "The exchange symbol that this item is traded under."
                                }
                              },
                              "amp_url": {
                                "type": "string",
                                "format": "url",
                                "description": "The mobile friendly Accelerated Mobile Page (AMP) URL.\n"
                              },
                              "image_url": {
                                "type": "string",
                                "format": "url",
                                "description": "The article's image URL.\n"
                              },
                              "description": {
                                "type": "string",
                                "description": "A description of the article.\n"
                              },
                              "keywords": {
                                "type": "array",
                                "description": "The keywords associated with the article (which will vary depending on\nthe publishing source).\n",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "next_url": {
                          "type": "string",
                          "description": "If present, this value can be used to fetch the next page of data."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "count": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "results": [
                    {
                      "id": "nJsSJJdwViHZcw5367rZi7_qkXLfMzacXBfpv-vD9UA",
                      "publisher": {
                        "name": "Benzinga",
                        "homepage_url": "https://www.benzinga.com/",
                        "logo_url": "https://s3.polygon.io/public/public/assets/news/logos/benzinga.svg",
                        "favicon_url": "https://s3.polygon.io/public/public/assets/news/favicons/benzinga.ico"
                      },
                      "title": "Cathie Wood Adds More Coinbase, Skillz, Trims Square",
                      "author": "Rachit Vats",
                      "published_utc": "2021-04-26T02:33:17Z",
                      "article_url": "https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square",
                      "tickers": [
                        "DOCU",
                        "DDD",
                        "NIU",
                        "ARKF",
                        "NVDA",
                        "SKLZ",
                        "PCAR",
                        "MASS",
                        "PSTI",
                        "SPFR",
                        "TREE",
                        "PHR",
                        "IRDM",
                        "BEAM",
                        "ARKW",
                        "ARKK",
                        "ARKG",
                        "PSTG",
                        "SQ",
                        "IONS",
                        "SYRS"
                      ],
                      "amp_url": "https://amp.benzinga.com/amp/content/20784086",
                      "image_url": "https://cdn2.benzinga.com/files/imagecache/og_image_social_share_1200x630/images/story/2012/andre-francois-mckenzie-auhr4gcqcce-unsplash.jpg?width=720",
                      "description": "<p>Cathie Wood-led Ark Investment Management on Friday snapped up another 221,167 shares of the cryptocurrency exchange <strong>Coinbase Global Inc </strong>(NASDAQ: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/coin#NASDAQ\">COIN</a>) worth about $64.49 million on the stock&rsquo;s Friday&rsquo;s dip and also its fourth-straight loss.</p>\n<p>The investment firm&rsquo;s <strong>Ark Innovation ETF</strong> (NYSE: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/arkk#NYSE\">ARKK</a>) bought the shares of the company that closed 0.63% lower at $291.60 on Friday, giving the cryptocurrency exchange a market cap of $58.09 billion. Coinbase&rsquo;s market cap has dropped from $85.8 billion on its blockbuster listing earlier this month.</p>\n<p>The New York-based company also added another 3,873 shares of the mobile gaming company <strong>Skillz Inc</strong> (NYSE: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/sklz#NYSE\">SKLZ</a>), <a href=\"http://www.benzinga.com/markets/cryptocurrency/21/04/20762794/cathie-woods-ark-loads-up-another-1-2-million-shares-in-skillz-also-adds-coinbase-draftkin\">just a day after</a> snapping 1.2 million shares of the stock.</p>\n<p>ARKK bought the shares of the company which closed ...</p><p><a href=https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square alt=Cathie Wood Adds More Coinbase, Skillz, Trims Square>Full story available on Benzinga.com</a></p>",
                      "keywords": [
                        "Sector ETFs",
                        "Penny Stocks",
                        "Cryptocurrency",
                        "Small Cap",
                        "Markets",
                        "Trading Ideas",
                        "ETFs"
                      ]
                    }
                  ],
                  "status": "OK",
                  "request_id": "831afdb0b8078549fed053476984947a",
                  "count": 1,
                  "next_url": "https://api.polygon.io:443/v2/reference/news?cursor=eyJsaW1pdCI6MSwic29ydCI6InB1Ymxpc2hlZF91dGMiLCJvcmRlciI6ImFzY2VuZGluZyIsInRpY2tlciI6e30sInB1Ymxpc2hlZF91dGMiOnsiZ3RlIjoiMjAyMS0wNC0yNiJ9LCJzZWFyY2hfYWZ0ZXIiOlsxNjE5NDA0Mzk3MDAwLG51bGxdfQ"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": {
            "description": "The specified resource was not found"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "reference",
          "description": "Reference data"
        }
      }
    },
    "/v1/marketstatus/upcoming": {
      "get": {
        "summary": "Market Holidays",
        "description": "Get upcoming market holidays and their open/close times.\n",
        "tags": [
          "reference:stocks:market"
        ],
        "responses": {
          "200": {
            "description": "Holidays for each market in the near future.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "exchange": {
                        "type": "string",
                        "description": "Which market the record is for."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the holiday."
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the market on the holiday."
                      },
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the holiday."
                      },
                      "open": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The market open time on the holiday (if it's not closed)."
                      },
                      "close": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The market close time on the holiday (if it's not closed)."
                      }
                    }
                  }
                },
                "example": [
                  {
                    "exchange": "NYSE",
                    "name": "Thanksgiving",
                    "date": "2020-11-26T00:00:00.000Z",
                    "status": "closed"
                  },
                  {
                    "exchange": "NASDAQ",
                    "name": "Thanksgiving",
                    "date": "2020-11-26T00:00:00.000Z",
                    "status": "closed"
                  },
                  {
                    "exchange": "OTC",
                    "name": "Thanksgiving",
                    "date": "2020-11-26T00:00:00.000Z",
                    "status": "closed"
                  },
                  {
                    "exchange": "NASDAQ",
                    "name": "Thanksgiving",
                    "date": "2020-11-27T00:00:00.000Z",
                    "status": "early-close",
                    "open": "2020-11-27T14:30:00.000Z",
                    "close": "2020-11-27T18:00:00.000Z"
                  },
                  {
                    "exchange": "NYSE",
                    "name": "Thanksgiving",
                    "date": "2020-11-27T00:00:00.000Z",
                    "status": "early-close",
                    "open": "2020-11-27T14:30:00.000Z",
                    "close": "2020-11-27T18:00:00.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": {
            "description": "The specified resource was not found"
          },
          "409": {
            "description": "Parameter is invalid or incorrect."
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "reference",
          "description": "Reference data"
        }
      }
    },
    "/v1/marketstatus/now": {
      "get": {
        "summary": "Market Status",
        "description": "Get the current trading status of the exchanges and overall financial markets.\n",
        "tags": [
          "reference:stocks:market"
        ],
        "responses": {
          "200": {
            "description": "Status of the market and each exchange",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "market": {
                      "type": "string",
                      "description": "The status of the market as a whole."
                    },
                    "earlyHours": {
                      "type": "boolean",
                      "description": "Whether or not the market is in pre-market hours."
                    },
                    "afterHours": {
                      "type": "boolean",
                      "description": "Whether or not the market is in post-market hours."
                    },
                    "serverTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The current time of the server."
                    },
                    "exchanges": {
                      "type": "object",
                      "properties": {
                        "nyse": {
                          "type": "string",
                          "description": "The status of the NYSE market."
                        },
                        "nasdaq": {
                          "type": "string",
                          "description": "The status of the Nasdaq market."
                        },
                        "otc": {
                          "type": "string",
                          "description": "The status of the OTC market."
                        }
                      }
                    },
                    "currencies": {
                      "type": "object",
                      "properties": {
                        "fx": {
                          "type": "string",
                          "description": "The status of the forex market."
                        },
                        "crypto": {
                          "type": "string",
                          "description": "The status of the crypto market."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "market": "extended-hours",
                  "earlyHours": false,
                  "afterHours": true,
                  "serverTime": "2020-11-10T22:37:37.000Z",
                  "exchanges": {
                    "nyse": "extended-hours",
                    "nasdaq": "extended-hours",
                    "otc": "closed"
                  },
                  "currencies": {
                    "fx": "open",
                    "crypto": "open"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": {
            "description": "The specified resource was not found"
          },
          "409": {
            "description": "Parameter is invalid or incorrect."
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "reference",
          "description": "Reference data"
        }
      }
    },
    "/v2/ticks/stocks/trades/{ticker}/{date}": {
      "get": {
        "summary": "Trades",
        "description": "Get trades for a given ticker symbol on a specified date.\n",
        "tags": [
          "stocks:trades"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The ticker symbol we want trades for.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date/day of the trades to retrieve in the format YYYY-MM-DD.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-10-14"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timestampLimit",
            "in": "query",
            "description": "The maximum timestamp allowed in the results.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Reverse the order of the results.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the size of the response, max 50000 and default 5000.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "A list of trades.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        },
                        "results_count": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "db_latency": {
                          "type": "integer",
                          "description": "Latency in milliseconds for the query results from the database."
                        },
                        "success": {
                          "type": "boolean",
                          "description": "Whether or not this query was executed successfully."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "T": {
                                    "type": "string",
                                    "description": "The exchange symbol that this item is traded under."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                                  },
                                  "y": {
                                    "type": "integer",
                                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                                  },
                                  "f": {
                                    "type": "integer",
                                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                                  },
                                  "q": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "c": {
                                    "type": "array",
                                    "description": "A list of condition codes.\n",
                                    "items": {
                                      "type": "integer",
                                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                                    }
                                  },
                                  "i": {
                                    "type": "string",
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                  },
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                  },
                                  "s": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The size of a trade (also known as volume).\n"
                                  },
                                  "e": {
                                    "type": "integer",
                                    "description": "The trade correction indicator.\n"
                                  },
                                  "x": {
                                    "type": "integer",
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                  },
                                  "r": {
                                    "type": "integer",
                                    "description": "The ID for the Trade Reporting Facility where the trade took place.\n"
                                  },
                                  "z": {
                                    "type": "integer",
                                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "AAPL",
                  "results_count": 2,
                  "db_latency": 11,
                  "success": true,
                  "results": [
                    {
                      "t": 1517562000016036600,
                      "y": 1517562000015577000,
                      "q": 1063,
                      "i": "1",
                      "x": 11,
                      "s": 100,
                      "c": [
                        12,
                        41
                      ],
                      "p": 171.55,
                      "z": 3
                    },
                    {
                      "t": 1517562000016038100,
                      "y": 1517562000015577600,
                      "q": 1064,
                      "i": "2",
                      "x": 11,
                      "s": 100,
                      "c": [
                        12,
                        41
                      ],
                      "p": 171.55,
                      "z": 3
                    }
                  ],
                  "map": {
                    "I": {
                      "name": "orig_id",
                      "type": "string"
                    },
                    "x": {
                      "name": "exchange",
                      "type": "int"
                    },
                    "p": {
                      "name": "price",
                      "type": "float64"
                    },
                    "i": {
                      "name": "id",
                      "type": "string"
                    },
                    "e": {
                      "name": "correction",
                      "type": "int"
                    },
                    "r": {
                      "name": "trf_id",
                      "type": "int"
                    },
                    "t": {
                      "name": "sip_timestamp",
                      "type": "int64"
                    },
                    "y": {
                      "name": "participant_timestamp",
                      "type": "int64"
                    },
                    "f": {
                      "name": "trf_timestamp",
                      "type": "int64"
                    },
                    "q": {
                      "name": "sequence_number",
                      "type": "int64"
                    },
                    "c": {
                      "name": "conditions",
                      "type": "int"
                    },
                    "s": {
                      "name": "size",
                      "type": "int"
                    },
                    "z": {
                      "name": "tape",
                      "type": "int"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "trades",
          "description": "Trade data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-deprecation": {
          "date": 1654056060000,
          "replaces": {
            "path": "get_v3_trades__stockticker",
            "name": "Trades v3"
          }
        }
      }
    },
    "/v2/ticks/stocks/nbbo/{ticker}/{date}": {
      "get": {
        "summary": "Quotes (NBBO)",
        "description": "Get NBBO quotes for a given ticker symbol on a specified date.\n",
        "tags": [
          "stocks:quotes"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The ticker symbol we want quotes for.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date/day of the quotes to retrieve in the format YYYY-MM-DD.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-10-14"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "timestampLimit",
            "in": "query",
            "description": "The maximum timestamp allowed in the results.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Reverse the order of the results.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the size of the response, max 50000 and default 5000.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "A list of quotes.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        },
                        "results_count": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "db_latency": {
                          "type": "integer",
                          "description": "Latency in milliseconds for the query results from the database."
                        },
                        "success": {
                          "type": "boolean",
                          "description": "Whether or not this query was executed successfully."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "T": {
                                    "type": "string",
                                    "description": "The exchange symbol that this item is traded under."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                                  },
                                  "y": {
                                    "type": "integer",
                                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                                  },
                                  "f": {
                                    "type": "integer",
                                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                                  },
                                  "q": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "c": {
                                    "type": "array",
                                    "description": "A list of condition codes.\n",
                                    "items": {
                                      "type": "integer",
                                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                                    }
                                  },
                                  "i": {
                                    "type": "array",
                                    "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                                    "items": {
                                      "type": "integer",
                                      "description": "The indicator code.\n"
                                    }
                                  },
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The bid price."
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
                                  },
                                  "x": {
                                    "allOf": [
                                      {
                                        "type": "integer",
                                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                      },
                                      {
                                        "description": "Bid Exchange Id"
                                      }
                                    ]
                                  },
                                  "P": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The ask price."
                                  },
                                  "S": {
                                    "type": "integer",
                                    "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
                                  },
                                  "X": {
                                    "allOf": [
                                      {
                                        "type": "integer",
                                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                      },
                                      {
                                        "description": "Ask Exchange Id"
                                      }
                                    ]
                                  },
                                  "z": {
                                    "type": "integer",
                                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "AAPL",
                  "success": true,
                  "results_count": 2,
                  "db_latency": 43,
                  "results": [
                    {
                      "t": 1517562000065700400,
                      "y": 1517562000065321200,
                      "q": 2060,
                      "c": [
                        1
                      ],
                      "z": 3,
                      "p": 102.7,
                      "s": 60,
                      "x": 11,
                      "P": 0,
                      "S": 0,
                      "X": 0
                    },
                    {
                      "t": 1517562000065791500,
                      "y": 1517562000065408300,
                      "q": 2061,
                      "c": [
                        1
                      ],
                      "z": 3,
                      "p": 170,
                      "s": 2,
                      "x": 11,
                      "P": 0,
                      "S": 0,
                      "X": 0
                    }
                  ],
                  "map": {
                    "t": {
                      "name": "sip_timestamp",
                      "type": "int64"
                    },
                    "y": {
                      "name": "participant_timestamp",
                      "type": "int64"
                    },
                    "i": {
                      "name": "indicators",
                      "type": "int"
                    },
                    "P": {
                      "name": "ask_price",
                      "type": "float64"
                    },
                    "X": {
                      "name": "ask_exchange",
                      "type": "int"
                    },
                    "f": {
                      "name": "trf_timestamp",
                      "type": "int64"
                    },
                    "q": {
                      "name": "sequence_number",
                      "type": "int"
                    },
                    "c": {
                      "name": "conditions",
                      "type": "int"
                    },
                    "p": {
                      "name": "bid_price",
                      "type": "float64"
                    },
                    "s": {
                      "name": "bid_size",
                      "type": "int"
                    },
                    "x": {
                      "name": "bid_exchange",
                      "type": "int"
                    },
                    "S": {
                      "name": "ask_size",
                      "type": "int"
                    },
                    "z": {
                      "name": "tape",
                      "type": "int"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "nbbo",
          "description": "NBBO data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-deprecation": {
          "date": 1654056060000,
          "replaces": {
            "path": "get_v3_quotes__stockticker",
            "name": "Quotes (NBBO) v3"
          }
        }
      }
    },
    "/v2/last/trade/{stocksTicker}": {
      "get": {
        "summary": "Last Trade",
        "description": "Get the most recent trade for a given stock.\n",
        "tags": [
          "stocks:last:trade"
        ],
        "parameters": [
          {
            "name": "stocksTicker",
            "in": "path",
            "description": "The ticker symbol of the stock/equity.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          }
        ],
        "responses": {
          "200": {
            "description": "The last trade for this stock.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "T": {
                                  "type": "string",
                                  "description": "The exchange symbol that this item is traded under."
                                },
                                "t": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                                },
                                "y": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                                },
                                "f": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                                },
                                "q": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "c": {
                                  "type": "array",
                                  "description": "A list of condition codes.\n",
                                  "items": {
                                    "type": "integer",
                                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                                  }
                                },
                                "i": {
                                  "type": "string",
                                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                },
                                "p": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                },
                                "s": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The size of a trade (also known as volume).\n"
                                },
                                "e": {
                                  "type": "integer",
                                  "description": "The trade correction indicator.\n"
                                },
                                "x": {
                                  "type": "integer",
                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                },
                                "r": {
                                  "type": "integer",
                                  "description": "The ID for the Trade Reporting Facility where the trade took place.\n"
                                },
                                "z": {
                                  "type": "integer",
                                  "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "request_id": "f05562305bd26ced64b98ed68b3c5d96",
                  "status": "OK",
                  "results": {
                    "T": "AAPL",
                    "c": [
                      37
                    ],
                    "f": 1617901342969796400,
                    "i": "118749",
                    "p": 129.8473,
                    "q": 3135876,
                    "r": 202,
                    "s": 25,
                    "t": 1617901342969834000,
                    "x": 4,
                    "y": 1617901342968000000,
                    "z": 3
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": {
            "description": "The specified resource was not found"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "trades",
          "description": "Trade data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/last/nbbo/{stocksTicker}": {
      "get": {
        "summary": "Last Quote",
        "description": "Get the most recent NBBO (Quote) tick for a given stock.\n",
        "tags": [
          "stocks:last:quote"
        ],
        "parameters": [
          {
            "name": "stocksTicker",
            "in": "path",
            "description": "The ticker symbol of the stock/equity.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          }
        ],
        "responses": {
          "200": {
            "description": "The last NBBO tick for this stock.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "T": {
                                  "type": "string",
                                  "description": "The exchange symbol that this item is traded under."
                                },
                                "t": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                                },
                                "y": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                                },
                                "f": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                                },
                                "q": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "c": {
                                  "type": "array",
                                  "description": "A list of condition codes.\n",
                                  "items": {
                                    "type": "integer",
                                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                                  }
                                },
                                "i": {
                                  "type": "array",
                                  "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                                  "items": {
                                    "type": "integer",
                                    "description": "The indicator code.\n"
                                  }
                                },
                                "p": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The bid price."
                                },
                                "s": {
                                  "type": "integer",
                                  "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
                                },
                                "x": {
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                    },
                                    {
                                      "description": "Bid Exchange Id"
                                    }
                                  ]
                                },
                                "P": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The ask price."
                                },
                                "S": {
                                  "type": "integer",
                                  "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
                                },
                                "X": {
                                  "allOf": [
                                    {
                                      "type": "integer",
                                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                    },
                                    {
                                      "description": "Ask Exchange Id"
                                    }
                                  ]
                                },
                                "z": {
                                  "type": "integer",
                                  "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "request_id": "b84e24636301f19f88e0dfbf9a45ed5c",
                  "status": "OK",
                  "results": {
                    "P": 127.98,
                    "S": 7,
                    "T": "AAPL",
                    "X": 19,
                    "p": 127.96,
                    "q": 83480742,
                    "s": 1,
                    "t": 1617827221349730300,
                    "x": 11,
                    "y": 1617827221349366000,
                    "z": 3
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": {
            "description": "The specified resource was not found"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "nbbo",
          "description": "NBBO data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v1/open-close/{stocksTicker}/{date}": {
      "get": {
        "summary": "Daily Open/Close",
        "description": "Get the open, close and afterhours prices of a stock symbol on a certain date.\n",
        "tags": [
          "stocks:open-close"
        ],
        "parameters": [
          {
            "name": "stocksTicker",
            "in": "path",
            "description": "The ticker symbol of the stock/equity.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the requested open/close in the format YYYY-MM-DD.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-10-14"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The open/close of this stock symbol.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of this request's response."
                    },
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "The requested date."
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The exchange symbol that this item is traded under."
                    },
                    "open": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "high": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "low": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "close": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "volume": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "preMarket": {
                      "type": "integer",
                      "description": "The open price of the ticker symbol in pre-market trading."
                    },
                    "afterHours": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price of the ticker symbol in after hours trading."
                    }
                  }
                },
                "example": {
                  "status": "OK",
                  "from": "2020-10-14T00:00:00.000Z",
                  "symbol": "AAPL",
                  "open": 324.66,
                  "high": 326.2,
                  "low": 322.3,
                  "close": 325.12,
                  "volume": 26122646,
                  "afterHours": 322.1,
                  "preMarket": 324.5
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        }
      }
    },
    "/v2/aggs/grouped/locale/us/market/stocks/{date}": {
      "get": {
        "summary": "Grouped Daily (Bars)",
        "description": "Get the daily open, high, low, and close (OHLC) for the entire stocks/equities markets.\n",
        "tags": [
          "stocks:aggregates"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "The beginning date for the aggregate window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-10-14"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Previous day OHLC for ticker",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "T": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "queryCount": 3,
                  "resultsCount": 3,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "KIMpL",
                      "v": 4369,
                      "vw": 26.0407,
                      "o": 26.07,
                      "c": 25.9102,
                      "h": 26.25,
                      "l": 25.91,
                      "t": 1602705600000,
                      "n": 74
                    },
                    {
                      "T": "TANH",
                      "v": 25933.6,
                      "vw": 23.493,
                      "o": 24.5,
                      "c": 23.4,
                      "h": 24.763,
                      "l": 22.65,
                      "t": 1602705600000,
                      "n": 1096
                    },
                    {
                      "T": "VSAT",
                      "v": 312583,
                      "vw": 34.4736,
                      "o": 34.9,
                      "c": 34.24,
                      "h": 35.47,
                      "l": 34.21,
                      "t": 1602705600000,
                      "n": 4966
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        }
      }
    },
    "/v2/aggs/ticker/{stocksTicker}/prev": {
      "get": {
        "summary": "Previous Close",
        "description": "Get the previous day's open, high, low, and close (OHLC) for the specified stock ticker.\n",
        "tags": [
          "stocks:aggregates"
        ],
        "parameters": [
          {
            "name": "stocksTicker",
            "in": "path",
            "description": "The ticker symbol of the stock/equity.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The previous day OHLC for the ticker.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "AAPL",
                  "status": "OK",
                  "queryCount": 1,
                  "resultsCount": 1,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "AAPL",
                      "v": 131704427,
                      "vw": 116.3058,
                      "o": 115.55,
                      "c": 115.97,
                      "h": 117.59,
                      "l": 114.13,
                      "t": 1605042000000
                    }
                  ],
                  "request_id": "6a7e466379af0a71039d60cc78e72282"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        }
      }
    },
    "/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}": {
      "get": {
        "summary": "Aggregates (Bars)",
        "description": "Get aggregate bars for a stock over a given date range in custom time window sizes.\n<br />\n<br />\nFor example, if timespan = ‘minute’ and multiplier = ‘5’ then 5-minute bars will be returned.\n",
        "tags": [
          "stocks:aggregates"
        ],
        "parameters": [
          {
            "name": "stocksTicker",
            "in": "path",
            "description": "The ticker symbol of the stock/equity.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          },
          {
            "name": "multiplier",
            "in": "path",
            "description": "The size of the timespan multiplier.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "timespan",
            "in": "path",
            "description": "The size of the time window.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ]
            },
            "example": "day"
          },
          {
            "name": "from",
            "in": "path",
            "description": "The start of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The end of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "sort",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 120
          }
        ],
        "responses": {
          "200": {
            "description": "Stock Aggregates.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "AAPL",
                  "status": "OK",
                  "queryCount": 2,
                  "resultsCount": 2,
                  "adjusted": true,
                  "results": [
                    {
                      "v": 135647456,
                      "vw": 74.6099,
                      "o": 74.06,
                      "c": 75.0875,
                      "h": 75.15,
                      "l": 73.7975,
                      "t": 1577941200000,
                      "n": 1
                    },
                    {
                      "v": 146535512,
                      "vw": 74.7026,
                      "o": 74.2875,
                      "c": 74.3575,
                      "h": 75.145,
                      "l": 74.125,
                      "t": 1578027600000,
                      "n": 1
                    }
                  ],
                  "request_id": "6a7e466379af0a71039d60cc78e72282"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        }
      }
    },
    "/v2/snapshot/locale/us/markets/stocks/tickers": {
      "get": {
        "summary": "Snapshot - All Tickers",
        "description": "Get the most up-to-date market data for all traded stock symbols.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
        "tags": [
          "stocks:snapshot"
        ],
        "parameters": [
          {
            "name": "tickers",
            "in": "query",
            "description": "A comma separated list of tickers to get snapshots for.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get current state for all tickers",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "count": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tickers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "lastQuote": {
                                "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                "type": "object",
                                "properties": {
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The bid price."
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The bid size in lots."
                                  },
                                  "P": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The ask price."
                                  },
                                  "S": {
                                    "type": "integer",
                                    "description": "The ask size in lots."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                                  }
                                }
                              },
                              "lastTrade": {
                                "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                "type": "object",
                                "properties": {
                                  "c": {
                                    "type": "array",
                                    "description": "The trade conditions.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "i": {
                                    "type": "string",
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                  },
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The size (volume) of the trade."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                                  },
                                  "x": {
                                    "type": "integer",
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                  }
                                }
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "av": {
                                    "type": "integer",
                                    "description": "The accumulated volume."
                                  },
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "todaysChange": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the change the from previous day."
                              },
                              "todaysChangePerc": {
                                "type": "number",
                                "format": "double",
                                "description": "The percentage change since the previous day."
                              },
                              "updated": {
                                "type": "integer",
                                "description": "The last updated timestamp."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "count": 1,
                  "tickers": [
                    {
                      "day": {
                        "c": 20.506,
                        "h": 20.64,
                        "l": 20.506,
                        "o": 20.64,
                        "v": 37216,
                        "vw": 20.616
                      },
                      "lastQuote": {
                        "P": 20.6,
                        "S": 22,
                        "p": 20.5,
                        "s": 13,
                        "t": 1605192959994246100
                      },
                      "lastTrade": {
                        "c": [
                          14,
                          41
                        ],
                        "i": "71675577320245",
                        "p": 20.506,
                        "s": 2416,
                        "t": 1605192894630916600,
                        "x": 4
                      },
                      "min": {
                        "av": 37216,
                        "c": 20.506,
                        "h": 20.506,
                        "l": 20.506,
                        "o": 20.506,
                        "v": 5000,
                        "vw": 20.5105
                      },
                      "prevDay": {
                        "c": 20.63,
                        "h": 21,
                        "l": 20.5,
                        "o": 20.79,
                        "v": 292738,
                        "vw": 20.6939
                      },
                      "ticker": "BCAT",
                      "todaysChange": -0.124,
                      "todaysChangePerc": -0.601,
                      "updated": 1605192894630916600
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}": {
      "get": {
        "summary": "Snapshot - Ticker",
        "description": "Get the most up-to-date market data for a single traded stock ticker.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
        "tags": [
          "stocks:snapshot"
        ],
        "parameters": [
          {
            "name": "stocksTicker",
            "in": "path",
            "description": "The ticker symbol of the stock/equity.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AAPL"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current state for a ticker",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "object",
                          "properties": {
                            "day": {
                              "description": "The most recent daily bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "lastQuote": {
                              "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                              "type": "object",
                              "properties": {
                                "p": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The bid price."
                                },
                                "s": {
                                  "type": "integer",
                                  "description": "The bid size in lots."
                                },
                                "P": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The ask price."
                                },
                                "S": {
                                  "type": "integer",
                                  "description": "The ask size in lots."
                                },
                                "t": {
                                  "type": "integer",
                                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                                }
                              }
                            },
                            "lastTrade": {
                              "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                              "type": "object",
                              "properties": {
                                "c": {
                                  "type": "array",
                                  "description": "The trade conditions.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "i": {
                                  "type": "string",
                                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                },
                                "p": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                },
                                "s": {
                                  "type": "integer",
                                  "description": "The size (volume) of the trade."
                                },
                                "t": {
                                  "type": "integer",
                                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                                },
                                "x": {
                                  "type": "integer",
                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                }
                              }
                            },
                            "min": {
                              "description": "The most recent minute bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "av": {
                                  "type": "integer",
                                  "description": "The accumulated volume."
                                },
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "prevDay": {
                              "description": "The previous day's bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "ticker": {
                              "type": "string",
                              "description": "The exchange symbol that this item is traded under."
                            },
                            "todaysChange": {
                              "type": "number",
                              "format": "double",
                              "description": "The value of the change the from previous day."
                            },
                            "todaysChangePerc": {
                              "type": "number",
                              "format": "double",
                              "description": "The percentage change since the previous day."
                            },
                            "updated": {
                              "type": "integer",
                              "description": "The last updated timestamp."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "request_id": "657e430f1ae768891f018e08e03598d8",
                  "ticker": {
                    "day": {
                      "c": 120.4229,
                      "h": 120.53,
                      "l": 118.81,
                      "o": 119.62,
                      "v": 28727868,
                      "vw": 119.725
                    },
                    "lastQuote": {
                      "P": 120.47,
                      "S": 4,
                      "p": 120.46,
                      "s": 8,
                      "t": 1605195918507251700
                    },
                    "lastTrade": {
                      "c": [
                        14,
                        41
                      ],
                      "i": "4046",
                      "p": 120.47,
                      "s": 236,
                      "t": 1605195918306274000,
                      "x": 10
                    },
                    "min": {
                      "av": 28724441,
                      "c": 120.4201,
                      "h": 120.468,
                      "l": 120.37,
                      "o": 120.435,
                      "v": 270796,
                      "vw": 120.4129
                    },
                    "prevDay": {
                      "c": 119.49,
                      "h": 119.63,
                      "l": 116.44,
                      "o": 117.19,
                      "v": 110597265,
                      "vw": 118.4998
                    },
                    "ticker": "AAPL",
                    "todaysChange": 0.98,
                    "todaysChangePerc": 0.82,
                    "updated": 1605195918306274000
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/us/markets/stocks/{direction}": {
      "get": {
        "summary": "Snapshot - Gainers/Losers",
        "description": "Get the most up-to-date market data for the current top 20 gainers or losers of the day in the stocks/equities markets.\n<br />\n<br />\nTop gainers are those tickers whose price has increased by the highest percentage since the previous day's close.\nTop losers are those tickers whose price has decreased by the highest percentage since the previous day's close.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges.\n",
        "tags": [
          "stocks:snapshot"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the snapshot results to return.\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gainers",
                "losers"
              ]
            },
            "example": "gainers"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the current tickers of the day",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tickers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "lastQuote": {
                                "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                "type": "object",
                                "properties": {
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The bid price."
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The bid size in lots."
                                  },
                                  "P": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The ask price."
                                  },
                                  "S": {
                                    "type": "integer",
                                    "description": "The ask size in lots."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                                  }
                                }
                              },
                              "lastTrade": {
                                "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                "type": "object",
                                "properties": {
                                  "c": {
                                    "type": "array",
                                    "description": "The trade conditions.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "i": {
                                    "type": "string",
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                  },
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The size (volume) of the trade."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                                  },
                                  "x": {
                                    "type": "integer",
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                  }
                                }
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "av": {
                                    "type": "integer",
                                    "description": "The accumulated volume."
                                  },
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "todaysChange": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the change the from previous day."
                              },
                              "todaysChangePerc": {
                                "type": "number",
                                "format": "double",
                                "description": "The percentage change since the previous day."
                              },
                              "updated": {
                                "type": "integer",
                                "description": "The last updated timestamp."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 14.2284,
                        "h": 15.09,
                        "l": 14.2,
                        "o": 14.33,
                        "v": 133963,
                        "vw": 14.5311
                      },
                      "lastQuote": {
                        "P": 14.44,
                        "S": 11,
                        "p": 14.2,
                        "s": 25,
                        "t": 1605195929997325600
                      },
                      "lastTrade": {
                        "c": [
                          63
                        ],
                        "i": "79372124707124",
                        "p": 14.2284,
                        "s": 536,
                        "t": 1605195848258266000,
                        "x": 4
                      },
                      "min": {
                        "av": 133963,
                        "c": 14.2284,
                        "h": 14.325,
                        "l": 14.2,
                        "o": 14.28,
                        "v": 6108,
                        "vw": 14.2426
                      },
                      "prevDay": {
                        "c": 0.73,
                        "h": 0.799,
                        "l": 0.73,
                        "o": 0.75,
                        "v": 1568097,
                        "vw": 0.7721
                      },
                      "ticker": "PDS",
                      "todaysChange": 13.498,
                      "todaysChangePerc": 1849.096,
                      "updated": 1605195848258266000
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/last/trade/{optionsTicker}": {
      "get": {
        "summary": "Last Trade",
        "description": "Get the most recent trade for a given options contract.\n",
        "tags": [
          "options:last:trade"
        ],
        "parameters": [
          {
            "name": "optionsTicker",
            "in": "path",
            "description": "The ticker symbol of the options contract.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "O:TSLA210903C00700000"
          }
        ],
        "responses": {
          "200": {
            "description": "The last trade for this options contract.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "T": {
                                  "type": "string",
                                  "description": "The exchange symbol that this item is traded under."
                                },
                                "t": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                                },
                                "y": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                                },
                                "f": {
                                  "type": "integer",
                                  "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                                },
                                "q": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "c": {
                                  "type": "array",
                                  "description": "A list of condition codes.\n",
                                  "items": {
                                    "type": "integer",
                                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                                  }
                                },
                                "i": {
                                  "type": "string",
                                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                },
                                "p": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                },
                                "s": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The size of a trade (also known as volume).\n"
                                },
                                "e": {
                                  "type": "integer",
                                  "description": "The trade correction indicator.\n"
                                },
                                "x": {
                                  "type": "integer",
                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                },
                                "r": {
                                  "type": "integer",
                                  "description": "The ID for the Trade Reporting Facility where the trade took place.\n"
                                },
                                "z": {
                                  "type": "integer",
                                  "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "request_id": "f05562305bd26ced64b98ed68b3c5d96",
                  "status": "OK",
                  "results": {
                    "T": "O:TSLA210903C00700000",
                    "c": [
                      227
                    ],
                    "f": 1617901342969796400,
                    "i": "",
                    "p": 115.55,
                    "q": 1325541950,
                    "r": 202,
                    "s": 25,
                    "t": 1617901342969834000,
                    "x": 312
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": {
            "description": "The specified resource was not found"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "trades",
          "description": "Trade data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "options",
          "description": "Options data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v1/open-close/{optionsTicker}/{date}": {
      "get": {
        "summary": "Daily Open/Close",
        "description": "Get the open, close and afterhours prices of an options contract on a certain date.\n",
        "tags": [
          "options:open-close"
        ],
        "parameters": [
          {
            "name": "optionsTicker",
            "in": "path",
            "description": "The ticker symbol of the options contract.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "O:TSLA210903C00700000"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the requested open/close in the format YYYY-MM-DD.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2021-07-22"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The open/close of this stock symbol.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of this request's response."
                    },
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "The requested date."
                    },
                    "symbol": {
                      "type": "string",
                      "description": "The exchange symbol that this item is traded under."
                    },
                    "open": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "high": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "low": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "close": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "volume": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "preMarket": {
                      "type": "integer",
                      "description": "The open price of the ticker symbol in pre-market trading."
                    },
                    "afterHours": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price of the ticker symbol in after hours trading."
                    }
                  }
                },
                "example": {
                  "status": "OK",
                  "from": "2021-07-22",
                  "symbol": "O:TSLA210903C00700000",
                  "open": 25,
                  "high": 26.35,
                  "low": 25,
                  "close": 26.35,
                  "volume": 2,
                  "afterHours": 26.35,
                  "preMarket": 25
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "options",
          "description": "Options data"
        }
      }
    },
    "/v2/aggs/ticker/{optionsTicker}/range/{multiplier}/{timespan}/{from}/{to}": {
      "get": {
        "summary": "Aggregates (Bars)",
        "description": "Get aggregate bars for an option contract over a given date range in custom time window sizes.\n<br />\n<br />\nFor example, if timespan = ‘minute’ and multiplier = ‘5’ then 5-minute bars will be returned.\n",
        "tags": [
          "options:aggregates"
        ],
        "parameters": [
          {
            "name": "optionsTicker",
            "in": "path",
            "description": "The ticker symbol of the options contract.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "O:TSLA210903C00700000"
          },
          {
            "name": "multiplier",
            "in": "path",
            "description": "The size of the timespan multiplier.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "timespan",
            "in": "path",
            "description": "The size of the time window.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ]
            },
            "example": "day"
          },
          {
            "name": "from",
            "in": "path",
            "description": "The start of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The end of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "sort",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 120
          }
        ],
        "responses": {
          "200": {
            "description": "Options Aggregates.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "O:RDFN211119C00025000",
                  "queryCount": 2,
                  "resultsCount": 2,
                  "adjusted": true,
                  "results": [
                    {
                      "v": 2,
                      "vw": 26.2,
                      "o": 26.2,
                      "c": 26.2,
                      "h": 26.2,
                      "l": 26.2,
                      "t": 1632369600000,
                      "n": 1
                    },
                    {
                      "v": 2,
                      "vw": 28.3,
                      "o": 28.3,
                      "c": 28.3,
                      "h": 28.3,
                      "l": 28.3,
                      "t": 1632456000000,
                      "n": 1
                    }
                  ],
                  "status": "OK",
                  "request_id": "5585acde-5085-42d6-95b2-2e388a28370a",
                  "count": 2
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "options",
          "description": "Options data"
        }
      }
    },
    "/v2/aggs/ticker/{optionsTicker}/prev": {
      "get": {
        "summary": "Previous Close",
        "description": "Get the previous day's open, high, low, and close (OHLC) for the specified option contract.\n",
        "tags": [
          "options:aggregates"
        ],
        "parameters": [
          {
            "name": "optionsTicker",
            "in": "path",
            "description": "The ticker symbol of the options contract.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "O:TSLA210903C00700000"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The previous day OHLC for the options contract.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "O:TSLA210903C00700000",
                  "status": "OK",
                  "queryCount": 1,
                  "resultsCount": 1,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "O:TSLA210903C00700000",
                      "v": 131704427,
                      "vw": 116.3058,
                      "o": 115.55,
                      "c": 115.97,
                      "h": 117.59,
                      "l": 114.13,
                      "t": 1605042000000,
                      "n": 2
                    }
                  ],
                  "request_id": "6a7e466379af0a71039d60cc78e72282"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "options",
          "description": "Options data"
        }
      }
    },
    "/v1/historic/forex/{from}/{to}/{date}": {
      "get": {
        "summary": "Historic Forex Ticks",
        "description": "Get historic ticks for a forex currency pair.\n",
        "tags": [
          "fx:trades"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "The \"from\" symbol of the currency pair.\n\nExample: For **USD/JPY** the `from` would be **USD**.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AUD"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The \"to\" symbol of the currency pair.\n\nExample: For **USD/JPY** the `to` would be **JPY**.\n",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "USD"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date/day of the historic ticks to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-10-14"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the size of the response, max 10000.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "An array of forex ticks",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "string",
                          "format": "date",
                          "description": "The date that was evaluated from the request."
                        },
                        "map": {
                          "type": "object",
                          "description": "A map for shortened result keys."
                        },
                        "msLatency": {
                          "type": "integer",
                          "description": "The milliseconds of latency for the query results."
                        },
                        "pair": {
                          "type": "string",
                          "description": "The currency pair that was evaluated from the request."
                        },
                        "ticks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "a": {
                                "type": "number",
                                "format": "double",
                                "description": "The ask price."
                              },
                              "b": {
                                "type": "number",
                                "format": "double",
                                "description": "The bid price."
                              },
                              "x": {
                                "type": "integer",
                                "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "day": "2020-10-14",
                  "map": {
                    "ap": "ask",
                    "bp": "bid",
                    "t": "timestamp"
                  },
                  "msLatency": "0",
                  "pair": "AUD/USD",
                  "status": "success",
                  "ticks": [
                    {
                      "x": 48,
                      "ap": 0.71703,
                      "bp": 0.71701,
                      "t": 1602633600000
                    },
                    {
                      "x": 48,
                      "ap": 0.71703,
                      "bp": 0.717,
                      "t": 1602633600000
                    },
                    {
                      "x": 48,
                      "ap": 0.71702,
                      "bp": 0.717,
                      "t": 1602633600000
                    }
                  ],
                  "type": "forex"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "nbbo",
          "description": "NBBO data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        },
        "x-polygon-deprecation": {
          "date": 1654056060000,
          "replaces": {
            "path": "get_v3_quotes__fxticker",
            "name": "Quotes (BBO) v3"
          }
        }
      }
    },
    "/v1/conversion/{from}/{to}": {
      "get": {
        "summary": "Real-time Currency Conversion",
        "description": "Get currency conversions using the latest market conversion rates. Note than you can convert in both directions. For example USD to CAD or CAD to USD.\n",
        "tags": [
          "fx:conversion"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "The \"from\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AUD"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The \"to\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "USD"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The amount to convert, with a decimal.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 100
          },
          {
            "name": "precision",
            "in": "query",
            "description": "The decimal precision of the conversion. Defaults to 2 which is 2 decimal places accuracy.",
            "required": false,
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1,
                2,
                3,
                4
              ]
            },
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The last tick for this currency pair, plus the converted amount for the requested amount.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "last": {
                          "type": "object",
                          "properties": {
                            "ask": {
                              "type": "number",
                              "format": "double",
                              "description": "The ask price."
                            },
                            "bid": {
                              "type": "number",
                              "format": "double",
                              "description": "The bid price."
                            },
                            "exchange": {
                              "type": "integer",
                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                            },
                            "timestamp": {
                              "type": "integer",
                              "description": "The Unix Msec timestamp for the start of the aggregate window."
                            }
                          }
                        },
                        "from": {
                          "type": "string",
                          "description": "The \"from\" currency symbol."
                        },
                        "to": {
                          "type": "string",
                          "description": "The \"to\" currency symbol."
                        },
                        "initialAmount": {
                          "type": "number",
                          "format": "double",
                          "description": "The amount to convert."
                        },
                        "converted": {
                          "type": "number",
                          "format": "double",
                          "description": "The result of the conversion."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "success",
                  "last": {
                    "bid": 1.3672596,
                    "ask": 1.3673344,
                    "exchange": 48,
                    "timestamp": 1605555313000
                  },
                  "from": "AUD",
                  "to": "USD",
                  "initialAmount": 100,
                  "converted": 73.14
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "nbbo",
          "description": "NBBO data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        }
      }
    },
    "/v1/last_quote/currencies/{from}/{to}": {
      "get": {
        "summary": "Last Quote for a Currency Pair",
        "description": "Get the last quote tick for a forex currency pair.\n",
        "tags": [
          "fx:last:quote"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "The \"from\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AUD"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The \"to\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "USD"
          }
        ],
        "responses": {
          "200": {
            "description": "The last quote tick for this currency pair.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "last": {
                          "type": "object",
                          "properties": {
                            "ask": {
                              "type": "number",
                              "format": "double",
                              "description": "The ask price."
                            },
                            "bid": {
                              "type": "number",
                              "format": "double",
                              "description": "The bid price."
                            },
                            "exchange": {
                              "type": "integer",
                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                            },
                            "timestamp": {
                              "type": "integer",
                              "description": "The Unix Msec timestamp for the start of the aggregate window."
                            }
                          }
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol pair that was evaluated from the request."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "last": {
                    "ask": 0.73124,
                    "bid": 0.73122,
                    "exchange": 48,
                    "timestamp": 1605557756000
                  },
                  "request_id": "a73a29dbcab4613eeaf48583d3baacf0",
                  "status": "success",
                  "symbol": "AUD/USD"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "nbbo",
          "description": "NBBO data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        }
      }
    },
    "/v2/aggs/grouped/locale/global/market/fx/{date}": {
      "get": {
        "summary": "Grouped Daily (Bars)",
        "description": "Get the daily open, high, low, and close (OHLC) for the entire forex markets.\n",
        "tags": [
          "fx:aggregates"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "The beginning date for the aggregate window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-10-14"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Previous day OHLC for ticker",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "T": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "queryCount": 3,
                  "resultsCount": 3,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "C:ILSCHF",
                      "v": 689,
                      "vw": 0.2702,
                      "o": 0.2698,
                      "c": 0.2704,
                      "h": 0.2706,
                      "l": 0.2693,
                      "t": 1602719999999,
                      "n": 689
                    },
                    {
                      "T": "C:GBPCAD",
                      "v": 407324,
                      "vw": 1.7062,
                      "o": 1.69955,
                      "c": 1.71103,
                      "h": 1.71642,
                      "l": 1.69064,
                      "t": 1602719999999,
                      "n": 407324
                    },
                    {
                      "T": "C:DKKAUD",
                      "v": 10639,
                      "vw": 0.2202,
                      "o": 0.22,
                      "c": 0.2214,
                      "h": 0.2214,
                      "l": 0.2195,
                      "t": 1602719999999,
                      "n": 10639
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        }
      }
    },
    "/v2/aggs/ticker/{forexTicker}/prev": {
      "get": {
        "summary": "Previous Close",
        "description": "Get the previous day's open, high, low, and close (OHLC) for the specified forex pair.\n",
        "tags": [
          "fx:aggregates"
        ],
        "parameters": [
          {
            "name": "forexTicker",
            "in": "path",
            "description": "The ticker symbol of the currency pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "C:EURUSD"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The previous day OHLC for the ticker.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "T": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "C:EURUSD",
                  "status": "OK",
                  "request_id": "08ec061fb85115678d68452c0a609cb7",
                  "queryCount": 1,
                  "resultsCount": 1,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "C:EURUSD",
                      "v": 180300,
                      "vw": 1.055,
                      "o": 1.05252,
                      "c": 1.06206,
                      "h": 1.0631,
                      "l": 1.0505,
                      "t": 1651708799999,
                      "n": 180300
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        }
      }
    },
    "/v2/aggs/ticker/{forexTicker}/range/{multiplier}/{timespan}/{from}/{to}": {
      "get": {
        "summary": "Aggregates (Bars)",
        "description": "Get aggregate bars for a forex pair over a given date range in custom time window sizes.\n<br />\n<br />\nFor example, if timespan = ‘minute’ and multiplier = ‘5’ then 5-minute bars will be returned.\n",
        "tags": [
          "fx:aggregates"
        ],
        "parameters": [
          {
            "name": "forexTicker",
            "in": "path",
            "description": "The ticker symbol of the currency pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "C:EURUSD"
          },
          {
            "name": "multiplier",
            "in": "path",
            "description": "The size of the timespan multiplier.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "timespan",
            "in": "path",
            "description": "The size of the time window.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ]
            },
            "example": "day"
          },
          {
            "name": "from",
            "in": "path",
            "description": "The start of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The end of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "sort",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 120
          }
        ],
        "responses": {
          "200": {
            "description": "Forex Aggregates.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "C:EURUSD",
                  "status": "OK",
                  "queryCount": 1,
                  "resultsCount": 1,
                  "adjusted": true,
                  "results": [
                    {
                      "v": 125329,
                      "vw": 1.1789,
                      "o": 1.17921,
                      "c": 1.17721,
                      "h": 1.18305,
                      "l": 1.1756,
                      "t": 1626912000000,
                      "n": 125329
                    }
                  ],
                  "request_id": "79c061995d8b627b736170bc9653f15d"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        }
      }
    },
    "/v2/snapshot/locale/global/markets/forex/tickers/{ticker}": {
      "get": {
        "summary": "Snapshot - Ticker",
        "description": "Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for a single traded currency symbol.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges.\n",
        "tags": [
          "fx:snapshot"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The forex ticker.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "C:EURUSD"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current state for a ticker",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "object",
                          "properties": {
                            "day": {
                              "description": "The most recent daily bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                }
                              }
                            },
                            "lastQuote": {
                              "description": "The most recent quote for this ticker.",
                              "type": "object",
                              "properties": {
                                "a": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The ask price."
                                },
                                "b": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The bid price."
                                },
                                "t": {
                                  "type": "integer",
                                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                                },
                                "x": {
                                  "type": "integer",
                                  "description": "The exchange ID on which this quote happened."
                                }
                              }
                            },
                            "min": {
                              "description": "The most recent minute bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                }
                              }
                            },
                            "prevDay": {
                              "description": "The previous day's bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "ticker": {
                              "type": "string",
                              "description": "The exchange symbol that this item is traded under."
                            },
                            "todaysChange": {
                              "type": "number",
                              "format": "double",
                              "description": "The value of the change the from previous day."
                            },
                            "todaysChangePerc": {
                              "type": "number",
                              "format": "double",
                              "description": "The percentage change since the previous day."
                            },
                            "updated": {
                              "type": "integer",
                              "description": "The last updated timestamp."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "request_id": "ad76e76ce183002c5937a7f02dfebde4",
                  "status": "OK",
                  "ticker": {
                    "day": {
                      "c": 1.18403,
                      "h": 1.1906,
                      "l": 1.18001,
                      "o": 1.18725,
                      "v": 83578
                    },
                    "lastQuote": {
                      "a": 1.18403,
                      "b": 1.18398,
                      "i": 0,
                      "t": 1606163759000,
                      "x": 48
                    },
                    "min": {
                      "c": 1.18396,
                      "h": 1.18423,
                      "l": 1.1838,
                      "o": 1.18404,
                      "v": 41
                    },
                    "prevDay": {
                      "c": 1.18724,
                      "h": 1.18727,
                      "l": 1.18725,
                      "o": 1.18725,
                      "v": 5,
                      "vw": 0
                    },
                    "ticker": "C:EURUSD",
                    "todaysChange": -0.00316,
                    "todaysChangePerc": -0.27458312,
                    "updated": 1606163759000
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/global/markets/forex/tickers": {
      "get": {
        "summary": "Snapshot - All Tickers",
        "description": "Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for all traded forex symbols.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
        "tags": [
          "fx:snapshot"
        ],
        "parameters": [
          {
            "name": "tickers",
            "in": "query",
            "description": "A comma separated list of tickers to get snapshots for.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get current state for all tickers",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tickers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  }
                                }
                              },
                              "lastQuote": {
                                "description": "The most recent quote for this ticker.",
                                "type": "object",
                                "properties": {
                                  "a": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The ask price."
                                  },
                                  "b": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The bid price."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                                  },
                                  "x": {
                                    "type": "integer",
                                    "description": "The exchange ID on which this quote happened."
                                  }
                                }
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  }
                                }
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "todaysChange": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the change the from previous day."
                              },
                              "todaysChangePerc": {
                                "type": "number",
                                "format": "double",
                                "description": "The percentage change since the previous day."
                              },
                              "updated": {
                                "type": "integer",
                                "description": "The last updated timestamp."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 0.11778221,
                        "h": 0.11812263,
                        "l": 0.11766631,
                        "o": 0.11797149,
                        "v": 77794
                      },
                      "lastQuote": {
                        "a": 0.11780678,
                        "b": 0.11777952,
                        "t": 1605280919000,
                        "x": 48
                      },
                      "min": {
                        "c": 0.117769,
                        "h": 0.11779633,
                        "l": 0.11773698,
                        "o": 0.11778,
                        "v": 202
                      },
                      "prevDay": {
                        "c": 0.11797258,
                        "h": 0.11797258,
                        "l": 0.11797149,
                        "o": 0.11797149,
                        "v": 2,
                        "vw": 0
                      },
                      "ticker": "C:HKDCHF",
                      "todaysChange": -0.00019306,
                      "todaysChangePerc": -0.1636482,
                      "updated": 1605280919000
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/global/markets/forex/{direction}": {
      "get": {
        "summary": "Snapshot - Gainers/Losers",
        "description": "Get the current top 20 gainers or losers of the day in forex markets.\n<br />\n<br />\nTop gainers are those tickers whose price has increased by the highest percentage since the previous day's close.\nTop losers are those tickers whose price has decreased by the highest percentage since the previous day's close.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges.\n",
        "tags": [
          "fx:snapshot"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the snapshot results to return.\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gainers",
                "losers"
              ]
            },
            "example": "gainers"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the current gainers / losers of the day",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tickers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  }
                                }
                              },
                              "lastQuote": {
                                "description": "The most recent quote for this ticker.",
                                "type": "object",
                                "properties": {
                                  "a": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The ask price."
                                  },
                                  "b": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The bid price."
                                  },
                                  "t": {
                                    "type": "integer",
                                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                                  },
                                  "x": {
                                    "type": "integer",
                                    "description": "The exchange ID on which this quote happened."
                                  }
                                }
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  }
                                }
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "todaysChange": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the change the from previous day."
                              },
                              "todaysChangePerc": {
                                "type": "number",
                                "format": "double",
                                "description": "The percentage change since the previous day."
                              },
                              "updated": {
                                "type": "integer",
                                "description": "The last updated timestamp."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 0.886156,
                        "h": 0.887111,
                        "l": 0.8825327,
                        "o": 0.8844732,
                        "v": 1041
                      },
                      "lastQuote": {
                        "a": 0.8879606,
                        "b": 0.886156,
                        "t": 1605283204000,
                        "x": 48
                      },
                      "min": {
                        "c": 0.886156,
                        "h": 0.886156,
                        "l": 0.886156,
                        "o": 0.886156,
                        "v": 1
                      },
                      "prevDay": {
                        "c": 0.8428527,
                        "h": 0.889773,
                        "l": 0.8428527,
                        "o": 0.8848539,
                        "v": 1078,
                        "vw": 0
                      },
                      "ticker": "C:PLNILS",
                      "todaysChange": 0.0433033,
                      "todaysChangePerc": 5.13770674,
                      "updated": 1605330008999
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "fx",
          "description": "Forex data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v1/last/crypto/{from}/{to}": {
      "get": {
        "summary": "Last Trade for a Crypto Pair",
        "description": "Get the last trade tick for a cryptocurrency pair.\n",
        "tags": [
          "crypto:last:trade"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "The \"from\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "BTC"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The \"to\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "USD"
          }
        ],
        "responses": {
          "200": {
            "description": "The last tick for this currency pair.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "last": {
                          "type": "object",
                          "properties": {
                            "conditions": {
                              "type": "array",
                              "description": "A list of condition codes.\n",
                              "items": {
                                "type": "integer",
                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                              }
                            },
                            "exchange": {
                              "type": "integer",
                              "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                            },
                            "price": {
                              "type": "number",
                              "format": "double",
                              "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                            },
                            "size": {
                              "type": "number",
                              "format": "double",
                              "description": "The size of a trade (also known as volume).\n"
                            },
                            "timestamp": {
                              "type": "integer",
                              "description": "The Unix Msec timestamp for the start of the aggregate window."
                            }
                          }
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol pair that was evaluated from the request."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "last": {
                    "conditions": [
                      1
                    ],
                    "exchange": 4,
                    "price": 16835.42,
                    "size": 0.006909,
                    "timestamp": 1605560885027
                  },
                  "request_id": "d2d779df015fe2b7fbb8e58366610ef7",
                  "status": "success",
                  "symbol": "BTC-USD"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "trades",
          "description": "Trade data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        }
      }
    },
    "/v1/open-close/crypto/{from}/{to}/{date}": {
      "get": {
        "summary": "Daily Open/Close",
        "description": "Get the open, close prices of a cryptocurrency symbol on a certain day.\n",
        "tags": [
          "crypto:open-close"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "The \"from\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "BTC"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The \"to\" symbol of the pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "USD"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date of the requested open/close in the format YYYY-MM-DD.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-10-14"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The open/close of this symbol.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "symbol": {
                      "type": "string",
                      "description": "The symbol pair that was evaluated from the request."
                    },
                    "isUTC": {
                      "type": "boolean",
                      "description": "Whether or not the timestamps are in UTC timezone."
                    },
                    "day": {
                      "type": "string",
                      "format": "date",
                      "description": "The date requested."
                    },
                    "open": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "close": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "openTrades": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "p": {
                            "type": "number",
                            "format": "double",
                            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                          },
                          "s": {
                            "type": "number",
                            "format": "double",
                            "description": "The size of a trade (also known as volume).\n"
                          },
                          "x": {
                            "type": "integer",
                            "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                          },
                          "c": {
                            "type": "array",
                            "description": "A list of condition codes.\n",
                            "items": {
                              "type": "integer",
                              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                            }
                          },
                          "t": {
                            "type": "integer",
                            "description": "The Unix Msec timestamp for the start of the aggregate window."
                          },
                          "i": {
                            "type": "string",
                            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                          }
                        }
                      }
                    },
                    "closingTrades": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "p": {
                            "type": "number",
                            "format": "double",
                            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                          },
                          "s": {
                            "type": "number",
                            "format": "double",
                            "description": "The size of a trade (also known as volume).\n"
                          },
                          "x": {
                            "type": "integer",
                            "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                          },
                          "c": {
                            "type": "array",
                            "description": "A list of condition codes.\n",
                            "items": {
                              "type": "integer",
                              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                            }
                          },
                          "t": {
                            "type": "integer",
                            "description": "The Unix Msec timestamp for the start of the aggregate window."
                          },
                          "i": {
                            "type": "string",
                            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "symbol": "BTC-USD",
                  "isUTC": true,
                  "day": "2020-10-09T00:00:00.000Z",
                  "open": 10932.44,
                  "close": 11050.64,
                  "openTrades": [
                    {
                      "s": 0.002,
                      "p": 10932.44,
                      "x": 1,
                      "t": 1602201600056,
                      "c": [
                        2
                      ],
                      "i": "511235746"
                    },
                    {
                      "s": 0.02,
                      "p": 10923.76,
                      "x": 4,
                      "t": 1602201600141,
                      "c": [
                        2
                      ],
                      "i": "511235751"
                    }
                  ],
                  "closingTrades": [
                    {
                      "s": 0.006128,
                      "p": 11050.64,
                      "x": 4,
                      "t": 1602287999795,
                      "c": [
                        2
                      ],
                      "i": "973323250"
                    },
                    {
                      "s": 0.014,
                      "p": 11049.4,
                      "x": 17,
                      "t": 1602287999659,
                      "c": [
                        1
                      ],
                      "i": "105717893"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        }
      }
    },
    "/v1/historic/crypto/{from}/{to}/{date}": {
      "get": {
        "summary": "Historic Crypto Trades",
        "description": "Get historic trade ticks for a cryptocurrency pair.\n",
        "tags": [
          "crypto:trades"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "The \"from\" symbol of the crypto pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "BTC"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The \"to\" symbol of the crypto pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "USD"
          },
          {
            "name": "date",
            "in": "path",
            "description": "The date/day of the historic ticks to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2020-10-14"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the size of the response, max 10000.",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "An array of crypto trade ticks.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "string",
                      "description": "The status of this request's response."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "string",
                          "format": "date",
                          "description": "The date that was evaluated from the request."
                        },
                        "map": {
                          "type": "object",
                          "description": "A map for shortened result keys."
                        },
                        "msLatency": {
                          "type": "integer",
                          "description": "The milliseconds of latency for the query results."
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The symbol pair that was evaluated from the request."
                        },
                        "ticks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "p": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                              },
                              "s": {
                                "type": "number",
                                "format": "double",
                                "description": "The size of a trade (also known as volume).\n"
                              },
                              "x": {
                                "type": "integer",
                                "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                              },
                              "c": {
                                "type": "array",
                                "description": "A list of condition codes.\n",
                                "items": {
                                  "type": "integer",
                                  "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                                }
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "i": {
                                "type": "string",
                                "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "day": "2020-10-14T00:00:00.000Z",
                  "map": {
                    "c": "conditions",
                    "p": "price",
                    "s": "size",
                    "t": "timestamp",
                    "x": "exchange"
                  },
                  "msLatency": 1,
                  "status": "success",
                  "symbol": "BTC-USD",
                  "ticks": [
                    {
                      "s": 0.00188217,
                      "p": 15482.89,
                      "x": 1,
                      "t": 1604880000067,
                      "c": [
                        2
                      ]
                    },
                    {
                      "s": 0.00161739,
                      "p": 15482.11,
                      "x": 1,
                      "t": 1604880000167,
                      "c": [
                        2
                      ]
                    }
                  ],
                  "type": "crypto"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "trades",
          "description": "Trade data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        },
        "x-polygon-deprecation": {
          "date": 1654056060000,
          "replaces": {
            "path": "get_v3_trades__cryptoticker",
            "name": "Trades v3"
          }
        }
      }
    },
    "/v2/aggs/grouped/locale/global/market/crypto/{date}": {
      "get": {
        "summary": "Grouped Daily (Bars)",
        "description": "Get the daily open, high, low, and close (OHLC) for the entire cryptocurrency markets.\n",
        "tags": [
          "crypto:aggregates"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "The beginning date for the aggregate window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2020-10-14"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The previous day OHLC for the ticker.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "T": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "queryCount": 3,
                  "resultsCount": 3,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "X:ARDRUSD",
                      "v": 2,
                      "vw": 0.0551,
                      "o": 0.0550762,
                      "c": 0.0550762,
                      "h": 0.0550762,
                      "l": 0.0550762,
                      "t": 1580676480000,
                      "n": 18388
                    },
                    {
                      "T": "X:NGCUSD",
                      "v": 4734,
                      "vw": 0.0273,
                      "o": 0.0273733,
                      "c": 0.0272983,
                      "h": 0.0273733,
                      "l": 0.0272983,
                      "t": 1580674080000,
                      "n": 18
                    },
                    {
                      "T": "X:ZSCUSD",
                      "v": 390,
                      "vw": 0.0003,
                      "o": 0.00028531,
                      "c": 0.00028531,
                      "h": 0.00028531,
                      "l": 0.00028531,
                      "t": 1580671080000,
                      "n": 151
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        }
      }
    },
    "/v2/aggs/ticker/{cryptoTicker}/prev": {
      "get": {
        "summary": "Previous Close",
        "description": "Get the previous day's open, high, low, and close (OHLC) for the specified cryptocurrency pair.\n",
        "tags": [
          "crypto:aggregates"
        ],
        "parameters": [
          {
            "name": "cryptoTicker",
            "in": "path",
            "description": "The ticker symbol of the currency pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "X:BTCUSD"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "The previous day OHLC for a ticker.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "T": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "X:BTCUSD",
                  "status": "OK",
                  "request_id": "b2170df985474b6d21a6eeccfb6bee67",
                  "queryCount": 1,
                  "resultsCount": 1,
                  "adjusted": true,
                  "results": [
                    {
                      "T": "X:BTCUSD",
                      "v": 95045.16897951,
                      "vw": 15954.2111,
                      "o": 15937.1,
                      "c": 16035.9,
                      "h": 16180,
                      "l": 15639.2,
                      "t": 1605416400000
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        }
      }
    },
    "/v2/aggs/ticker/{cryptoTicker}/range/{multiplier}/{timespan}/{from}/{to}": {
      "get": {
        "summary": "Aggregates (Bars)",
        "description": "Get aggregate bars for a cryptocurrency pair over a given date range in custom time window sizes.\n<br />\n<br />\nFor example, if timespan = ‘minute’ and multiplier = ‘5’ then 5-minute bars will be returned.\n",
        "tags": [
          "crypto:aggregates"
        ],
        "parameters": [
          {
            "name": "cryptoTicker",
            "in": "path",
            "description": "The ticker symbol of the currency pair.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "X:BTCUSD"
          },
          {
            "name": "multiplier",
            "in": "path",
            "description": "The size of the timespan multiplier.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "timespan",
            "in": "path",
            "description": "The size of the time window.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ]
            },
            "example": "day"
          },
          {
            "name": "from",
            "in": "path",
            "description": "The start of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The end of the aggregate time window.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2021-07-22"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "sort",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
            "example": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 120
          }
        ],
        "responses": {
          "200": {
            "description": "Cryptocurrency Aggregates.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "string",
                          "description": "The exchange symbol that this item is traded under."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        },
                        "adjusted": {
                          "type": "boolean",
                          "description": "Whether or not this response was adjusted for splits."
                        },
                        "queryCount": {
                          "type": "integer",
                          "description": "The number of aggregates (minute or day) used to generate the response."
                        },
                        "resultsCount": {
                          "type": "integer",
                          "description": "The total number of results for this request."
                        },
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "o": {
                                "type": "number",
                                "format": "double",
                                "description": "The open price for the symbol in the given time period."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The highest price for the symbol in the given time period."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The lowest price for the symbol in the given time period."
                              },
                              "c": {
                                "type": "number",
                                "format": "double",
                                "description": "The close price for the symbol in the given time period."
                              },
                              "v": {
                                "type": "number",
                                "format": "double",
                                "description": "The trading volume of the symbol in the given time period."
                              },
                              "vw": {
                                "type": "number",
                                "format": "double",
                                "description": "The volume weighted average price."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Unix Msec timestamp for the start of the aggregate window."
                              },
                              "n": {
                                "type": "number",
                                "description": "The number of transactions in the aggregate window."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ticker": "X:BTCUSD",
                  "status": "OK",
                  "queryCount": 2,
                  "resultsCount": 2,
                  "adjusted": true,
                  "results": [
                    {
                      "v": 303067.6562332156,
                      "vw": 9874.5529,
                      "o": 9557.9,
                      "c": 10094.75,
                      "h": 10429.26,
                      "l": 9490,
                      "t": 1590984000000,
                      "n": 1
                    },
                    {
                      "v": 323339.6922892879,
                      "vw": 9729.5701,
                      "o": 10096.87,
                      "c": 9492.62,
                      "h": 10222.72,
                      "l": 9135.68,
                      "t": 1591070400000,
                      "n": 1
                    }
                  ],
                  "request_id": "0cf72b6da685bcd386548ffe2895904a"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        }
      }
    },
    "/v2/snapshot/locale/global/markets/crypto/tickers": {
      "get": {
        "summary": "Snapshot - All Tickers",
        "description": "Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for all traded cryptocurrency symbols.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
        "tags": [
          "crypto:snapshot"
        ],
        "parameters": [
          {
            "name": "tickers",
            "in": "query",
            "description": "A comma separated list of tickers to get snapshots for.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get current state for all tickers",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tickers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "lastTrade": {
                                "allOf": [
                                  {
                                    "description": "The most recent trade for this ticker."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "c": {
                                        "type": "array",
                                        "description": "The trade conditions.",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "i": {
                                        "type": "string",
                                        "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                      },
                                      "p": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                      },
                                      "s": {
                                        "type": "integer",
                                        "description": "The size (volume) of the trade."
                                      },
                                      "t": {
                                        "type": "integer",
                                        "description": "The Unix Msec timestamp for the start of the aggregate window."
                                      },
                                      "x": {
                                        "type": "integer",
                                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "x": {
                                        "type": "integer",
                                        "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                                      }
                                    }
                                  }
                                ]
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "todaysChange": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the change the from previous day."
                              },
                              "todaysChangePerc": {
                                "type": "number",
                                "format": "double",
                                "description": "The percentage change since the previous day."
                              },
                              "updated": {
                                "type": "integer",
                                "description": "The last updated timestamp."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 0.296,
                        "h": 0.59714,
                        "l": 0.23706,
                        "o": 0.28,
                        "v": 4097699.5691991993,
                        "vw": 0
                      },
                      "lastTrade": {
                        "c": [
                          1
                        ],
                        "i": 413131,
                        "p": 0.293,
                        "s": 13.6191,
                        "t": 1605292686010,
                        "x": 17
                      },
                      "min": {
                        "c": 0.296,
                        "h": 0.296,
                        "l": 0.294,
                        "o": 0.296,
                        "v": 123.4866,
                        "vw": 0
                      },
                      "prevDay": {
                        "c": 0.281,
                        "h": 0.59714,
                        "l": 0.23706,
                        "o": 0.27,
                        "v": 6070178.786154971,
                        "vw": 0.4076
                      },
                      "ticker": "X:FSNUSD",
                      "todaysChange": 0.012,
                      "todaysChangePerc": 4.270463,
                      "updated": 1605330008999
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/global/markets/crypto/tickers/{ticker}": {
      "get": {
        "summary": "Snapshot - Ticker",
        "description": "Get the current minute, day, and previous day’s aggregate, as well as the last trade and quote for a single traded cryptocurrency symbol.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges.\n",
        "tags": [
          "crypto:snapshot"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "Ticker of the snapshot",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "X:BTCUSD"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current state for a ticker",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of this request's response."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string",
                          "description": "A request id assigned by the server."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "ticker": {
                          "type": "object",
                          "properties": {
                            "day": {
                              "description": "The most recent daily bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "lastTrade": {
                              "allOf": [
                                {
                                  "description": "The most recent trade for this ticker."
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "c": {
                                      "type": "array",
                                      "description": "The trade conditions.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "i": {
                                      "type": "string",
                                      "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                    },
                                    "p": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                    },
                                    "s": {
                                      "type": "integer",
                                      "description": "The size (volume) of the trade."
                                    },
                                    "t": {
                                      "type": "integer",
                                      "description": "The Unix Msec timestamp for the start of the aggregate window."
                                    },
                                    "x": {
                                      "type": "integer",
                                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                    }
                                  }
                                },
                                {
                                  "properties": {
                                    "x": {
                                      "type": "integer",
                                      "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                                    }
                                  }
                                }
                              ]
                            },
                            "min": {
                              "description": "The most recent minute bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "prevDay": {
                              "description": "The previous day's bar for this ticker.",
                              "type": "object",
                              "properties": {
                                "o": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The open price for the symbol in the given time period."
                                },
                                "h": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The highest price for the symbol in the given time period."
                                },
                                "l": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The lowest price for the symbol in the given time period."
                                },
                                "c": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The close price for the symbol in the given time period."
                                },
                                "v": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The trading volume of the symbol in the given time period."
                                },
                                "vw": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The volume weighted average price."
                                }
                              }
                            },
                            "ticker": {
                              "type": "string",
                              "description": "The exchange symbol that this item is traded under."
                            },
                            "todaysChange": {
                              "type": "number",
                              "format": "double",
                              "description": "The value of the change the from previous day."
                            },
                            "todaysChangePerc": {
                              "type": "number",
                              "format": "double",
                              "description": "The percentage change since the previous day."
                            },
                            "updated": {
                              "type": "integer",
                              "description": "The last updated timestamp."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "request_id": "ad92e92ce183112c593717f00dfebd2c",
                  "status": "OK",
                  "ticker": {
                    "day": {
                      "c": 16260.85,
                      "h": 16428.4,
                      "l": 15830.4,
                      "o": 16418.07,
                      "v": 105008.84231068,
                      "vw": 0
                    },
                    "lastTrade": {
                      "c": [
                        2
                      ],
                      "i": "464569520",
                      "p": 16242.31,
                      "s": 0.001933,
                      "t": 1605294230780,
                      "x": 4
                    },
                    "min": {
                      "c": 16235.1,
                      "h": 16264.29,
                      "l": 16129.3,
                      "o": 16257.51,
                      "v": 19.30791925,
                      "vw": 0
                    },
                    "prevDay": {
                      "c": 16399.24,
                      "h": 16418.07,
                      "l": 16399.24,
                      "o": 16418.07,
                      "v": 0.99167108,
                      "vw": 16402.6893
                    },
                    "ticker": "X:BTCUSD",
                    "todaysChange": -156.93,
                    "todaysChangePerc": -0.956935,
                    "updated": 1605330008999
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/global/markets/crypto/tickers/{ticker}/book": {
      "get": {
        "summary": "Snapshot - Ticker Full Book (L2)",
        "description": "Get the current level 2 book of a single ticker. This is the combined book from all of the exchanges.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges.\n",
        "tags": [
          "crypto:snapshot"
        ],
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "The cryptocurrency ticker.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "X:BTCUSD"
          }
        ],
        "responses": {
          "200": {
            "description": "Get current level 2 book for a ticker",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "string",
                      "description": "The status of this request's response."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "ticker": {
                              "type": "string",
                              "description": "The exchange symbol that this item is traded under."
                            },
                            "bids": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of this book level."
                                  },
                                  "x": {
                                    "type": "object",
                                    "description": "A map of the exchange ID to number of shares at this price level.\n<br />\n<br />\n**Example:**\n<br />\n`{\n  \"p\": 16302.94,\n  \"x\": {\n    \"1\": 0.02859424,\n    \"6\": 0.023455\n  }\n}`\n<br />\n<br />\nIn this example, exchange ID 1 has 0.02859424 shares available at $16,302.94,\nand exchange ID 6 has 0.023455 shares at the same price level.\n"
                                  }
                                }
                              }
                            },
                            "asks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "p": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The price of this book level."
                                  },
                                  "x": {
                                    "type": "object",
                                    "description": "A map of the exchange ID to number of shares at this price level.\n<br />\n<br />\n**Example:**\n<br />\n`{\n  \"p\": 16302.94,\n  \"x\": {\n    \"1\": 0.02859424,\n    \"6\": 0.023455\n  }\n}`\n<br />\n<br />\nIn this example, exchange ID 1 has 0.02859424 shares available at $16,302.94,\nand exchange ID 6 has 0.023455 shares at the same price level.\n"
                                  }
                                }
                              }
                            },
                            "bidCount": {
                              "type": "number",
                              "format": "double",
                              "description": "The combined total number of bids in the book."
                            },
                            "askCount": {
                              "type": "number",
                              "format": "double",
                              "description": "The combined total number of asks in the book."
                            },
                            "spread": {
                              "type": "number",
                              "format": "double",
                              "description": "The difference between the best bid and the best ask price accross exchanges."
                            },
                            "updated": {
                              "type": "integer",
                              "description": "The last updated timestamp."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "data": {
                    "ticker": "X:BTCUSD",
                    "bids": [
                      {
                        "p": 16303.17,
                        "x": {
                          "1": 2
                        }
                      },
                      {
                        "p": 16302.94,
                        "x": {
                          "1": 0.02859424,
                          "6": 0.023455
                        }
                      }
                    ],
                    "asks": [
                      {
                        "p": 11454,
                        "x": {
                          "2": 1
                        }
                      },
                      {
                        "p": 11455,
                        "x": {
                          "2": 1
                        }
                      }
                    ],
                    "bidCount": 694.951789670001,
                    "askCount": 593.1412981600005,
                    "spread": -4849.17,
                    "updated": 1605295074162
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    },
    "/v2/snapshot/locale/global/markets/crypto/{direction}": {
      "get": {
        "summary": "Snapshot - Gainers/Losers",
        "description": "Get the current top 20 gainers or losers of the day in cryptocurrency markets.\n<br />\n<br />\nTop gainers are those tickers whose price has increased by the highest percentage since the previous day's close.\nTop losers are those tickers whose price has decreased by the highest percentage since the previous day's close.\n<br />\n<br />\nNote: Snapshot data is cleared at 12am EST and gets populated as data is received from the exchanges.\n",
        "tags": [
          "crypto:snapshot"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "path",
            "description": "The direction of the snapshot results to return.\n",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "gainers",
                "losers"
              ]
            },
            "example": "gainers"
          }
        ],
        "responses": {
          "200": {
            "description": "Get the current gainers / losers of the day",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "string",
                      "description": "The status of this request's response."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tickers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "lastTrade": {
                                "allOf": [
                                  {
                                    "description": "The most recent trade for this ticker."
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "c": {
                                        "type": "array",
                                        "description": "The trade conditions.",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "i": {
                                        "type": "string",
                                        "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                                      },
                                      "p": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                                      },
                                      "s": {
                                        "type": "integer",
                                        "description": "The size (volume) of the trade."
                                      },
                                      "t": {
                                        "type": "integer",
                                        "description": "The Unix Msec timestamp for the start of the aggregate window."
                                      },
                                      "x": {
                                        "type": "integer",
                                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "x": {
                                        "type": "integer",
                                        "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                                      }
                                    }
                                  }
                                ]
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "type": "object",
                                "properties": {
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The open price for the symbol in the given time period."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest price for the symbol in the given time period."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest price for the symbol in the given time period."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The close price for the symbol in the given time period."
                                  },
                                  "v": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The trading volume of the symbol in the given time period."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The volume weighted average price."
                                  }
                                }
                              },
                              "ticker": {
                                "type": "string",
                                "description": "The exchange symbol that this item is traded under."
                              },
                              "todaysChange": {
                                "type": "number",
                                "format": "double",
                                "description": "The value of the change the from previous day."
                              },
                              "todaysChangePerc": {
                                "type": "number",
                                "format": "double",
                                "description": "The percentage change since the previous day."
                              },
                              "updated": {
                                "type": "integer",
                                "description": "The last updated timestamp."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 0.0374,
                        "h": 0.062377,
                        "l": 0.01162,
                        "o": 0.044834,
                        "v": 27313165.159427017,
                        "vw": 0
                      },
                      "lastTrade": {
                        "c": [
                          2
                        ],
                        "i": "517478762",
                        "p": 0.0374,
                        "s": 499,
                        "t": 1604409649544,
                        "x": 2
                      },
                      "min": {
                        "c": 0.062377,
                        "h": 0.062377,
                        "l": 0.062377,
                        "o": 0.062377,
                        "v": 35420,
                        "vw": 0
                      },
                      "prevDay": {
                        "c": 0.01162,
                        "h": 0.044834,
                        "l": 0.01162,
                        "o": 0.044834,
                        "v": 53616273.36827199,
                        "vw": 0.0296
                      },
                      "ticker": "X:DRNUSD",
                      "todaysChange": 0.02578,
                      "todaysChangePerc": 221.858864,
                      "updated": 1605330008999
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "crypto",
          "description": "Crypto data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          {
            "name": "realtime",
            "description": "Real Time Data"
          },
          {
            "name": "delayed",
            "description": "15 minute delayed data"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TickerBase": {
        "type": "object",
        "properties": {
          "ticker": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          }
        }
      },
      "StatusBase": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of this request's response."
          }
        }
      },
      "StatusCountBase": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of this request's response."
          },
          "count": {
            "type": "integer",
            "description": "The total number of results for this request."
          }
        }
      },
      "RequestIdBase": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A request id assigned by the server."
          }
        }
      },
      "StandardBase": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string",
                "description": "A request id assigned by the server."
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "The status of this request's response."
              },
              "count": {
                "type": "integer",
                "description": "The total number of results for this request."
              }
            }
          }
        ]
      },
      "PaginationHooksBase": {
        "type": "object",
        "properties": {
          "next_url": {
            "type": "string",
            "description": "If present, this value can be used to fetch the next page of data."
          }
        }
      },
      "V1LastBase": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          },
          "status": {
            "type": "string",
            "description": "The status of this request's response."
          },
          "request_id": {
            "type": "string",
            "description": "A request id assigned by the server."
          }
        }
      },
      "V2LastBase": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of this request's response."
          },
          "request_id": {
            "type": "string",
            "description": "A request id assigned by the server."
          }
        }
      },
      "V2TicksBase": {
        "type": "object",
        "properties": {
          "ticker": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          },
          "results_count": {
            "type": "integer",
            "description": "The total number of results for this request."
          },
          "db_latency": {
            "type": "integer",
            "description": "Latency in milliseconds for the query results from the database."
          },
          "success": {
            "type": "boolean",
            "description": "Whether or not this query was executed successfully."
          }
        }
      },
      "V2AggsBase": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of this request's response."
          },
          "adjusted": {
            "type": "boolean",
            "description": "Whether or not this response was adjusted for splits."
          },
          "queryCount": {
            "type": "integer",
            "description": "The number of aggregates (minute or day) used to generate the response."
          },
          "resultsCount": {
            "type": "integer",
            "description": "The total number of results for this request."
          },
          "request_id": {
            "type": "string",
            "description": "A request id assigned by the server."
          }
        }
      },
      "News": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "symbols": {
              "type": "array",
              "description": "A list of ticker symbols relating to the article.",
              "items": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              }
            },
            "title": {
              "type": "string",
              "description": "The title of the news article."
            },
            "url": {
              "type": "string",
              "description": "A direct link to the news article from its source publication."
            },
            "source": {
              "type": "string",
              "description": "The publication source of the article."
            },
            "summary": {
              "type": "string",
              "description": "A summary of the news article."
            },
            "image": {
              "type": "string",
              "description": "A URL of the image for the news article, if found."
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of the news article."
            },
            "keywords": {
              "type": "array",
              "description": "A list of common keywords related to the news article.",
              "items": {
                "type": "string",
                "description": "Common keywords of the news article."
              }
            }
          }
        }
      },
      "Financial": {
        "type": "object",
        "required": [
          "symbol",
          "reportDate",
          "reportDateStr"
        ],
        "properties": {
          "symbol": {
            "type": "string",
            "example": "AAPL",
            "description": "Stock Symbol"
          },
          "reportDate": {
            "type": "string",
            "format": "date-time",
            "example": "2017-12-31T00:00:00.000Z",
            "description": "Report Date"
          },
          "reportDateStr": {
            "type": "string",
            "example": "2017-12-31",
            "description": "Report date as non date format"
          },
          "grossProfit": {
            "type": "integer",
            "example": 33912000000
          },
          "costOfRevenue": {
            "type": "integer",
            "example": 54381000000
          },
          "operatingRevenue": {
            "type": "integer",
            "example": 88293000000
          },
          "totalRevenue": {
            "type": "integer",
            "example": 88293000000
          },
          "operatingIncome": {
            "type": "integer",
            "example": 26274000000
          },
          "netIncome": {
            "type": "integer",
            "example": 20065000000
          },
          "researchAndDevelopment": {
            "type": "integer",
            "example": 3407000000
          },
          "operatingExpense": {
            "type": "integer",
            "example": 7638000000
          },
          "currentAssets": {
            "type": "integer",
            "example": 143810000000
          },
          "totalAssets": {
            "type": "integer",
            "example": 406794000000
          },
          "totalLiabilities": {
            "type": "integer",
            "example": 266595000000
          },
          "currentCash": {
            "type": "integer",
            "example": 27491000000
          },
          "currentDebt": {
            "type": "integer",
            "example": 18478000000
          },
          "totalCash": {
            "type": "integer",
            "example": 77153000000
          },
          "totalDebt": {
            "type": "integer",
            "example": 122400000000
          },
          "shareholderEquity": {
            "type": "integer",
            "example": 140199000000
          },
          "cashChange": {
            "type": "integer",
            "example": 7202000000
          },
          "cashFlow": {
            "type": "integer",
            "example": 28293000000
          },
          "operatingGainsLosses": {
            "type": "number",
            "example": null
          }
        }
      },
      "Exchange": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "The ID of the exchange."
            },
            "type": {
              "type": "string",
              "description": "The type of exchange.\n- TRF = Trade Reporting Facility\n- exchange = Reporting exchange on the tape\n"
            },
            "market": {
              "type": "string",
              "description": "The market data type that this exchange contains."
            },
            "mic": {
              "type": "string",
              "description": "The Market Identification Code or MIC as defined in ISO 10383 (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Market_Identifier_Code\">https://en.wikipedia.org/wiki/Market_Identifier_Code</a>)."
            },
            "name": {
              "type": "string",
              "description": "The name of the exchange."
            },
            "tape": {
              "type": "string",
              "description": "The tape id of the exchange."
            },
            "code": {
              "type": "string",
              "description": "A unique identifier for the exchange internal to Polygon.io.  This is not an industry code or ISO standard."
            }
          }
        }
      },
      "ConditionTypeMap": {
        "type": "object",
        "properties": {
          "condition": {
            "type": "string",
            "description": "Polygon.io's mapping for condition codes.  For more information, see our <a href=\"https://polygon.io/glossary/us/stocks/trade-conditions\" alt=\"Trade Conditions Glossary\" target=\"_blank\">Trade Conditions Glossary</a>.\n"
          }
        }
      },
      "MarketStatus": {
        "type": "object",
        "properties": {
          "market": {
            "type": "string",
            "description": "The status of the market as a whole."
          },
          "earlyHours": {
            "type": "boolean",
            "description": "Whether or not the market is in pre-market hours."
          },
          "afterHours": {
            "type": "boolean",
            "description": "Whether or not the market is in post-market hours."
          },
          "serverTime": {
            "type": "string",
            "format": "date-time",
            "description": "The current time of the server."
          },
          "exchanges": {
            "type": "object",
            "properties": {
              "nyse": {
                "type": "string",
                "description": "The status of the NYSE market."
              },
              "nasdaq": {
                "type": "string",
                "description": "The status of the Nasdaq market."
              },
              "otc": {
                "type": "string",
                "description": "The status of the OTC market."
              }
            }
          },
          "currencies": {
            "type": "object",
            "properties": {
              "fx": {
                "type": "string",
                "description": "The status of the forex market."
              },
              "crypto": {
                "type": "string",
                "description": "The status of the crypto market."
              }
            }
          }
        }
      },
      "MarketHoliday": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "exchange": {
              "type": "string",
              "description": "Which market the record is for."
            },
            "name": {
              "type": "string",
              "description": "The name of the holiday."
            },
            "status": {
              "type": "string",
              "description": "The status of the market on the holiday."
            },
            "date": {
              "type": "string",
              "format": "date",
              "description": "The date of the holiday."
            },
            "open": {
              "type": "string",
              "format": "date-time",
              "description": "The market open time on the holiday (if it's not closed)."
            },
            "close": {
              "type": "string",
              "format": "date-time",
              "description": "The market close time on the holiday (if it's not closed)."
            }
          }
        }
      },
      "RatingSection": {
        "type": "object",
        "required": [
          "month1",
          "month2",
          "month3",
          "current"
        ],
        "properties": {
          "current": {
            "type": "number",
            "example": 0,
            "description": "Analyst Rating at current month"
          },
          "month1": {
            "type": "number",
            "example": 1,
            "description": "Analyst Ratings at 1 month in the future"
          },
          "month2": {
            "type": "number",
            "example": 3,
            "description": "Analyst Ratings at 2 month in the future"
          },
          "month3": {
            "type": "number",
            "example": 4,
            "description": "Analyst Ratings at 3 month in the future"
          },
          "month4": {
            "type": "number",
            "example": 3,
            "description": "Analyst Ratings at 4 month in the future"
          },
          "month5": {
            "type": "number",
            "example": 2,
            "description": "Analyst Ratings at 5 month in the future"
          }
        }
      },
      "TradeDetailsMapItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Actual type of the trade detail item"
          },
          "name": {
            "type": "string",
            "description": "Name of the trade detail item"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "description": "The URL of the entity's logo."
          },
          "exchange": {
            "type": "string",
            "description": "The symbol's primary exchange."
          },
          "exchangeSymbol": {
            "type": "string",
            "description": "The exchange code (id) of the symbol's primary exchange."
          },
          "type": {
            "type": "string",
            "description": "The type or class of the security.  (<a alt=\"Full List of Ticker Types\" href=\"https://polygon.io/docs/stocks/get_v3_reference_tickers_types\">Full List of Ticker Types</a>)"
          },
          "name": {
            "type": "string",
            "description": "The name of the company/entity."
          },
          "symbol": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          },
          "listdate": {
            "type": "string",
            "format": "date",
            "description": "The date that the symbol was listed on the exchange."
          },
          "cik": {
            "type": "string",
            "description": "The official CIK guid used for SEC database/filings."
          },
          "bloomberg": {
            "type": "string",
            "description": "The Bloomberg guid for the symbol."
          },
          "figi": {
            "type": "string",
            "description": "The OpenFigi project guid for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://openfigi.com/\">https://openfigi.com/</a>)"
          },
          "lei": {
            "type": "string",
            "description": "The Legal Entity Identifier (LEI) guid for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Legal_Entity_Identifier\">https://en.wikipedia.org/wiki/Legal_Entity_Identifier</a>)"
          },
          "sic": {
            "type": "integer",
            "description": "Standard Industrial Classification (SIC) id for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Standard_Industrial_Classification\">https://en.wikipedia.org/wiki/Legal_Entity_Identifier</a>)"
          },
          "country": {
            "type": "string",
            "description": "The country in which the company is registered."
          },
          "industry": {
            "type": "string",
            "description": "The industry in which the company operates."
          },
          "sector": {
            "type": "string",
            "description": "The sector of the indsutry in which the symbol operates."
          },
          "marketcap": {
            "type": "integer",
            "description": "The current market cap for the company."
          },
          "employees": {
            "type": "integer",
            "description": "The approximate number of employees for the company."
          },
          "phone": {
            "type": "string",
            "description": "The phone number for the company. This is usually a corporate contact number."
          },
          "ceo": {
            "type": "string",
            "description": "The name of the company's current CEO."
          },
          "url": {
            "type": "string",
            "description": "The URL of the company's website"
          },
          "description": {
            "type": "string",
            "description": "A description of the company and what they do/offer."
          },
          "hq_address": {
            "type": "string",
            "description": "The street address for the company's headquarters."
          },
          "hq_state": {
            "type": "string",
            "description": "The state in which the company's headquarters is located."
          },
          "hq_country": {
            "type": "string",
            "description": "The country in which the company's headquarters is located."
          },
          "similar": {
            "type": "array",
            "description": "A list of ticker symbols for similar companies.",
            "items": {
              "type": "string",
              "description": "The exchange symbol that this item is traded under."
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "A list of words related to the company."
            }
          },
          "updated": {
            "type": "string",
            "format": "date",
            "description": "The last time this company record was updated."
          },
          "active": {
            "type": "boolean",
            "description": "Indicates if the security is actively listed.  If false, this means the company is no longer listed and cannot be traded."
          }
        }
      },
      "Adjusted": {
        "type": "boolean",
        "description": "Whether or not this response was adjusted for splits."
      },
      "AskExchangeId": {
        "allOf": [
          {
            "type": "integer",
            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
          },
          {
            "description": "Ask Exchange Id"
          }
        ]
      },
      "AskPrice": {
        "type": "number",
        "format": "double",
        "description": "The ask price."
      },
      "AskSize": {
        "type": "integer",
        "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
      },
      "BidExchangeId": {
        "allOf": [
          {
            "type": "integer",
            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
          },
          {
            "description": "Bid Exchange Id"
          }
        ]
      },
      "BidPrice": {
        "type": "number",
        "format": "double",
        "description": "The bid price."
      },
      "BidSize": {
        "type": "integer",
        "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
      },
      "Close": {
        "type": "number",
        "format": "double",
        "description": "The close price for the symbol in the given time period."
      },
      "Conditions": {
        "type": "array",
        "description": "A list of condition codes.\n",
        "items": {
          "type": "integer",
          "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
        }
      },
      "Count": {
        "type": "integer",
        "description": "The total number of results for this request."
      },
      "Date": {
        "oneOf": [
          {
            "type": "string",
            "format": "date-time"
          },
          {
            "type": "string",
            "format": "date"
          }
        ]
      },
      "ExchangeId": {
        "type": "integer",
        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
      },
      "ForexExchangeId": {
        "type": "integer",
        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
      },
      "High": {
        "type": "number",
        "format": "double",
        "description": "The highest price for the symbol in the given time period."
      },
      "Indicators": {
        "type": "array",
        "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
        "items": {
          "type": "integer",
          "description": "The indicator code.\n"
        }
      },
      "Low": {
        "type": "number",
        "format": "double",
        "description": "The lowest price for the symbol in the given time period."
      },
      "Map": {
        "type": "object",
        "description": "A mapping of the keys returned in the results to their descriptive name and data types.",
        "properties": {
          "key": {
            "type": "object",
            "description": "A dynamic key from the results set",
            "properties": {
              "name": {
                "type": "string",
                "description": "The descriptive name of this results key"
              },
              "type": {
                "type": "string",
                "description": "The data type of this results key",
                "enum": [
                  "string",
                  "int",
                  "int64",
                  "float64"
                ]
              }
            }
          }
        }
      },
      "MsLatency": {
        "type": "integer",
        "description": "The milliseconds of latency for the query results."
      },
      "NumberOfItems": {
        "type": "number",
        "description": "The number of transactions in the aggregate window."
      },
      "Open": {
        "type": "number",
        "format": "double",
        "description": "The open price for the symbol in the given time period."
      },
      "Price": {
        "type": "number",
        "format": "double",
        "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
      },
      "QueryCount": {
        "type": "integer",
        "description": "The number of aggregates (minute or day) used to generate the response."
      },
      "RequestID": {
        "type": "string",
        "description": "A request id assigned by the server."
      },
      "Size": {
        "type": "number",
        "format": "double",
        "description": "The size of a trade (also known as volume).\n"
      },
      "SequenceNumber": {
        "type": "integer",
        "format": "int64",
        "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
      },
      "Status": {
        "type": "string",
        "description": "The status of this request's response."
      },
      "StockSymbol": {
        "type": "string",
        "description": "The exchange symbol that this item is traded under."
      },
      "SymbolPair": {
        "type": "string",
        "description": "The symbol pair that was evaluated from the request."
      },
      "Timestamp": {
        "type": "integer",
        "description": "The Unix Msec timestamp for the start of the aggregate window."
      },
      "TimestampSIP": {
        "type": "integer",
        "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
      },
      "TimestampExchange": {
        "type": "integer",
        "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
      },
      "TimestampTRF": {
        "type": "integer",
        "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
      },
      "Tape": {
        "type": "integer",
        "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
      },
      "TodaysChange": {
        "type": "number",
        "format": "double",
        "description": "The value of the change the from previous day."
      },
      "TodaysChangePerc": {
        "type": "number",
        "format": "double",
        "description": "The percentage change since the previous day."
      },
      "TradeExchange": {
        "type": "integer",
        "description": "The exchange that this trade happened on."
      },
      "TradeId": {
        "type": "string",
        "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
      },
      "Updated": {
        "type": "integer",
        "description": "The last updated timestamp."
      },
      "Volume": {
        "type": "number",
        "format": "double",
        "description": "The trading volume of the symbol in the given time period."
      },
      "VolumeWeight": {
        "type": "number",
        "format": "double",
        "description": "The volume weighted average price."
      },
      "TickerResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "o": {
                  "type": "number",
                  "format": "double",
                  "description": "The open price for the symbol in the given time period."
                },
                "h": {
                  "type": "number",
                  "format": "double",
                  "description": "The highest price for the symbol in the given time period."
                },
                "l": {
                  "type": "number",
                  "format": "double",
                  "description": "The lowest price for the symbol in the given time period."
                },
                "c": {
                  "type": "number",
                  "format": "double",
                  "description": "The close price for the symbol in the given time period."
                },
                "v": {
                  "type": "number",
                  "format": "double",
                  "description": "The trading volume of the symbol in the given time period."
                },
                "vw": {
                  "type": "number",
                  "format": "double",
                  "description": "The volume weighted average price."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "n": {
                  "type": "number",
                  "description": "The number of transactions in the aggregate window."
                }
              }
            }
          }
        }
      },
      "StocksGroupedResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "T": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "o": {
                  "type": "number",
                  "format": "double",
                  "description": "The open price for the symbol in the given time period."
                },
                "h": {
                  "type": "number",
                  "format": "double",
                  "description": "The highest price for the symbol in the given time period."
                },
                "l": {
                  "type": "number",
                  "format": "double",
                  "description": "The lowest price for the symbol in the given time period."
                },
                "c": {
                  "type": "number",
                  "format": "double",
                  "description": "The close price for the symbol in the given time period."
                },
                "v": {
                  "type": "number",
                  "format": "double",
                  "description": "The trading volume of the symbol in the given time period."
                },
                "vw": {
                  "type": "number",
                  "format": "double",
                  "description": "The volume weighted average price."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "n": {
                  "type": "number",
                  "description": "The number of transactions in the aggregate window."
                }
              }
            }
          }
        }
      },
      "ForexGroupedResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "T": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "o": {
                  "type": "number",
                  "format": "double",
                  "description": "The open price for the symbol in the given time period."
                },
                "h": {
                  "type": "number",
                  "format": "double",
                  "description": "The highest price for the symbol in the given time period."
                },
                "l": {
                  "type": "number",
                  "format": "double",
                  "description": "The lowest price for the symbol in the given time period."
                },
                "c": {
                  "type": "number",
                  "format": "double",
                  "description": "The close price for the symbol in the given time period."
                },
                "v": {
                  "type": "number",
                  "format": "double",
                  "description": "The trading volume of the symbol in the given time period."
                },
                "vw": {
                  "type": "number",
                  "format": "double",
                  "description": "The volume weighted average price."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "n": {
                  "type": "number",
                  "description": "The number of transactions in the aggregate window."
                }
              }
            }
          }
        }
      },
      "ForexTickerResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "o": {
                  "type": "number",
                  "format": "double",
                  "description": "The open price for the symbol in the given time period."
                },
                "h": {
                  "type": "number",
                  "format": "double",
                  "description": "The highest price for the symbol in the given time period."
                },
                "l": {
                  "type": "number",
                  "format": "double",
                  "description": "The lowest price for the symbol in the given time period."
                },
                "c": {
                  "type": "number",
                  "format": "double",
                  "description": "The close price for the symbol in the given time period."
                },
                "v": {
                  "type": "number",
                  "format": "double",
                  "description": "The trading volume of the symbol in the given time period."
                },
                "vw": {
                  "type": "number",
                  "format": "double",
                  "description": "The volume weighted average price."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "n": {
                  "type": "number",
                  "description": "The number of transactions in the aggregate window."
                }
              }
            }
          }
        }
      },
      "CryptoGroupedResults": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "T": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "o": {
                  "type": "number",
                  "format": "double",
                  "description": "The open price for the symbol in the given time period."
                },
                "h": {
                  "type": "number",
                  "format": "double",
                  "description": "The highest price for the symbol in the given time period."
                },
                "l": {
                  "type": "number",
                  "format": "double",
                  "description": "The lowest price for the symbol in the given time period."
                },
                "c": {
                  "type": "number",
                  "format": "double",
                  "description": "The close price for the symbol in the given time period."
                },
                "v": {
                  "type": "number",
                  "format": "double",
                  "description": "The trading volume of the symbol in the given time period."
                },
                "vw": {
                  "type": "number",
                  "format": "double",
                  "description": "The volume weighted average price."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "n": {
                  "type": "number",
                  "description": "The number of transactions in the aggregate window."
                }
              }
            }
          }
        }
      },
      "SnapshotLastTrade": {
        "type": "object",
        "properties": {
          "c": {
            "type": "array",
            "description": "The trade conditions.",
            "items": {
              "type": "string"
            }
          },
          "i": {
            "type": "string",
            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
          },
          "p": {
            "type": "number",
            "format": "double",
            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
          },
          "s": {
            "type": "integer",
            "description": "The size (volume) of the trade."
          },
          "t": {
            "type": "integer",
            "description": "The Unix Msec timestamp for the start of the aggregate window."
          },
          "x": {
            "type": "integer",
            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
          }
        }
      },
      "SnapshotOHLCV": {
        "type": "object",
        "properties": {
          "o": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "h": {
            "type": "number",
            "format": "double",
            "description": "The highest price for the symbol in the given time period."
          },
          "l": {
            "type": "number",
            "format": "double",
            "description": "The lowest price for the symbol in the given time period."
          },
          "c": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "v": {
            "type": "number",
            "format": "double",
            "description": "The trading volume of the symbol in the given time period."
          }
        }
      },
      "SnapshotOHLCVVW": {
        "type": "object",
        "properties": {
          "o": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "h": {
            "type": "number",
            "format": "double",
            "description": "The highest price for the symbol in the given time period."
          },
          "l": {
            "type": "number",
            "format": "double",
            "description": "The lowest price for the symbol in the given time period."
          },
          "c": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "v": {
            "type": "number",
            "format": "double",
            "description": "The trading volume of the symbol in the given time period."
          },
          "vw": {
            "type": "number",
            "format": "double",
            "description": "The volume weighted average price."
          }
        }
      },
      "StocksSnapshotLastQuote": {
        "type": "object",
        "properties": {
          "p": {
            "type": "number",
            "format": "double",
            "description": "The bid price."
          },
          "s": {
            "type": "integer",
            "description": "The bid size in lots."
          },
          "P": {
            "type": "number",
            "format": "double",
            "description": "The ask price."
          },
          "S": {
            "type": "integer",
            "description": "The ask size in lots."
          },
          "t": {
            "type": "integer",
            "description": "The Unix Msec timestamp for the start of the aggregate window."
          }
        }
      },
      "StocksSnapshotMinute": {
        "type": "object",
        "properties": {
          "av": {
            "type": "integer",
            "description": "The accumulated volume."
          },
          "o": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "h": {
            "type": "number",
            "format": "double",
            "description": "The highest price for the symbol in the given time period."
          },
          "l": {
            "type": "number",
            "format": "double",
            "description": "The lowest price for the symbol in the given time period."
          },
          "c": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "v": {
            "type": "number",
            "format": "double",
            "description": "The trading volume of the symbol in the given time period."
          },
          "vw": {
            "type": "number",
            "format": "double",
            "description": "The volume weighted average price."
          }
        }
      },
      "StocksSnapshotTickers": {
        "type": "object",
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "description": "The most recent daily bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "lastQuote": {
                  "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                  "type": "object",
                  "properties": {
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The bid price."
                    },
                    "s": {
                      "type": "integer",
                      "description": "The bid size in lots."
                    },
                    "P": {
                      "type": "number",
                      "format": "double",
                      "description": "The ask price."
                    },
                    "S": {
                      "type": "integer",
                      "description": "The ask size in lots."
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Unix Msec timestamp for the start of the aggregate window."
                    }
                  }
                },
                "lastTrade": {
                  "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                  "type": "object",
                  "properties": {
                    "c": {
                      "type": "array",
                      "description": "The trade conditions.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "i": {
                      "type": "string",
                      "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                    },
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                    },
                    "s": {
                      "type": "integer",
                      "description": "The size (volume) of the trade."
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Unix Msec timestamp for the start of the aggregate window."
                    },
                    "x": {
                      "type": "integer",
                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                    }
                  }
                },
                "min": {
                  "description": "The most recent minute bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "av": {
                      "type": "integer",
                      "description": "The accumulated volume."
                    },
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "prevDay": {
                  "description": "The previous day's bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "ticker": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "todaysChange": {
                  "type": "number",
                  "format": "double",
                  "description": "The value of the change the from previous day."
                },
                "todaysChangePerc": {
                  "type": "number",
                  "format": "double",
                  "description": "The percentage change since the previous day."
                },
                "updated": {
                  "type": "integer",
                  "description": "The last updated timestamp."
                }
              }
            }
          }
        }
      },
      "StocksSnapshotTicker": {
        "type": "object",
        "properties": {
          "ticker": {
            "type": "object",
            "properties": {
              "day": {
                "description": "The most recent daily bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "lastQuote": {
                "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                "type": "object",
                "properties": {
                  "p": {
                    "type": "number",
                    "format": "double",
                    "description": "The bid price."
                  },
                  "s": {
                    "type": "integer",
                    "description": "The bid size in lots."
                  },
                  "P": {
                    "type": "number",
                    "format": "double",
                    "description": "The ask price."
                  },
                  "S": {
                    "type": "integer",
                    "description": "The ask size in lots."
                  },
                  "t": {
                    "type": "integer",
                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                  }
                }
              },
              "lastTrade": {
                "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                "type": "object",
                "properties": {
                  "c": {
                    "type": "array",
                    "description": "The trade conditions.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "i": {
                    "type": "string",
                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                  },
                  "p": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                  },
                  "s": {
                    "type": "integer",
                    "description": "The size (volume) of the trade."
                  },
                  "t": {
                    "type": "integer",
                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                  },
                  "x": {
                    "type": "integer",
                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                  }
                }
              },
              "min": {
                "description": "The most recent minute bar for this ticker.",
                "type": "object",
                "properties": {
                  "av": {
                    "type": "integer",
                    "description": "The accumulated volume."
                  },
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "prevDay": {
                "description": "The previous day's bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "ticker": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "todaysChange": {
                "type": "number",
                "format": "double",
                "description": "The value of the change the from previous day."
              },
              "todaysChangePerc": {
                "type": "number",
                "format": "double",
                "description": "The percentage change since the previous day."
              },
              "updated": {
                "type": "integer",
                "description": "The last updated timestamp."
              }
            }
          }
        }
      },
      "ForexSnapshotLastQuote": {
        "type": "object",
        "properties": {
          "a": {
            "type": "number",
            "format": "double",
            "description": "The ask price."
          },
          "b": {
            "type": "number",
            "format": "double",
            "description": "The bid price."
          },
          "t": {
            "type": "integer",
            "description": "The Unix Msec timestamp for the start of the aggregate window."
          },
          "x": {
            "type": "integer",
            "description": "The exchange ID on which this quote happened."
          }
        }
      },
      "ForexSnapshotPrevDay": {
        "type": "object",
        "properties": {
          "o": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "h": {
            "type": "number",
            "format": "double",
            "description": "The highest price for the symbol in the given time period."
          },
          "l": {
            "type": "number",
            "format": "double",
            "description": "The lowest price for the symbol in the given time period."
          },
          "c": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "v": {
            "type": "number",
            "format": "double",
            "description": "The trading volume of the symbol in the given time period."
          },
          "vw": {
            "type": "number",
            "format": "double",
            "description": "The volume weighted average price."
          }
        }
      },
      "ForexSnapshotTicker": {
        "type": "object",
        "properties": {
          "ticker": {
            "type": "object",
            "properties": {
              "day": {
                "description": "The most recent daily bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  }
                }
              },
              "lastQuote": {
                "description": "The most recent quote for this ticker.",
                "type": "object",
                "properties": {
                  "a": {
                    "type": "number",
                    "format": "double",
                    "description": "The ask price."
                  },
                  "b": {
                    "type": "number",
                    "format": "double",
                    "description": "The bid price."
                  },
                  "t": {
                    "type": "integer",
                    "description": "The Unix Msec timestamp for the start of the aggregate window."
                  },
                  "x": {
                    "type": "integer",
                    "description": "The exchange ID on which this quote happened."
                  }
                }
              },
              "min": {
                "description": "The most recent minute bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  }
                }
              },
              "prevDay": {
                "description": "The previous day's bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "ticker": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "todaysChange": {
                "type": "number",
                "format": "double",
                "description": "The value of the change the from previous day."
              },
              "todaysChangePerc": {
                "type": "number",
                "format": "double",
                "description": "The percentage change since the previous day."
              },
              "updated": {
                "type": "integer",
                "description": "The last updated timestamp."
              }
            }
          }
        }
      },
      "ForexSnapshotTickers": {
        "type": "object",
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "description": "The most recent daily bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    }
                  }
                },
                "lastQuote": {
                  "description": "The most recent quote for this ticker.",
                  "type": "object",
                  "properties": {
                    "a": {
                      "type": "number",
                      "format": "double",
                      "description": "The ask price."
                    },
                    "b": {
                      "type": "number",
                      "format": "double",
                      "description": "The bid price."
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Unix Msec timestamp for the start of the aggregate window."
                    },
                    "x": {
                      "type": "integer",
                      "description": "The exchange ID on which this quote happened."
                    }
                  }
                },
                "min": {
                  "description": "The most recent minute bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    }
                  }
                },
                "prevDay": {
                  "description": "The previous day's bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "ticker": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "todaysChange": {
                  "type": "number",
                  "format": "double",
                  "description": "The value of the change the from previous day."
                },
                "todaysChangePerc": {
                  "type": "number",
                  "format": "double",
                  "description": "The percentage change since the previous day."
                },
                "updated": {
                  "type": "integer",
                  "description": "The last updated timestamp."
                }
              }
            }
          }
        }
      },
      "CryptoSnapshotMinute": {
        "type": "object",
        "properties": {
          "o": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "h": {
            "type": "number",
            "format": "double",
            "description": "The highest price for the symbol in the given time period."
          },
          "l": {
            "type": "number",
            "format": "double",
            "description": "The lowest price for the symbol in the given time period."
          },
          "c": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "v": {
            "type": "number",
            "format": "double",
            "description": "The trading volume of the symbol in the given time period."
          },
          "vw": {
            "type": "number",
            "format": "double",
            "description": "The volume weighted average price."
          }
        }
      },
      "CryptoSnapshotTicker": {
        "type": "object",
        "properties": {
          "ticker": {
            "type": "object",
            "properties": {
              "day": {
                "description": "The most recent daily bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "lastTrade": {
                "allOf": [
                  {
                    "description": "The most recent trade for this ticker."
                  },
                  {
                    "type": "object",
                    "properties": {
                      "c": {
                        "type": "array",
                        "description": "The trade conditions.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "i": {
                        "type": "string",
                        "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                      },
                      "p": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                      },
                      "s": {
                        "type": "integer",
                        "description": "The size (volume) of the trade."
                      },
                      "t": {
                        "type": "integer",
                        "description": "The Unix Msec timestamp for the start of the aggregate window."
                      },
                      "x": {
                        "type": "integer",
                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                      }
                    }
                  },
                  {
                    "properties": {
                      "x": {
                        "type": "integer",
                        "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                      }
                    }
                  }
                ]
              },
              "min": {
                "description": "The most recent minute bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "prevDay": {
                "description": "The previous day's bar for this ticker.",
                "type": "object",
                "properties": {
                  "o": {
                    "type": "number",
                    "format": "double",
                    "description": "The open price for the symbol in the given time period."
                  },
                  "h": {
                    "type": "number",
                    "format": "double",
                    "description": "The highest price for the symbol in the given time period."
                  },
                  "l": {
                    "type": "number",
                    "format": "double",
                    "description": "The lowest price for the symbol in the given time period."
                  },
                  "c": {
                    "type": "number",
                    "format": "double",
                    "description": "The close price for the symbol in the given time period."
                  },
                  "v": {
                    "type": "number",
                    "format": "double",
                    "description": "The trading volume of the symbol in the given time period."
                  },
                  "vw": {
                    "type": "number",
                    "format": "double",
                    "description": "The volume weighted average price."
                  }
                }
              },
              "ticker": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "todaysChange": {
                "type": "number",
                "format": "double",
                "description": "The value of the change the from previous day."
              },
              "todaysChangePerc": {
                "type": "number",
                "format": "double",
                "description": "The percentage change since the previous day."
              },
              "updated": {
                "type": "integer",
                "description": "The last updated timestamp."
              }
            }
          }
        }
      },
      "CryptoSnapshotTickers": {
        "type": "object",
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "description": "The most recent daily bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "lastTrade": {
                  "allOf": [
                    {
                      "description": "The most recent trade for this ticker."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "c": {
                          "type": "array",
                          "description": "The trade conditions.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "i": {
                          "type": "string",
                          "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                        },
                        "p": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                        },
                        "s": {
                          "type": "integer",
                          "description": "The size (volume) of the trade."
                        },
                        "t": {
                          "type": "integer",
                          "description": "The Unix Msec timestamp for the start of the aggregate window."
                        },
                        "x": {
                          "type": "integer",
                          "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                        }
                      }
                    },
                    {
                      "properties": {
                        "x": {
                          "type": "integer",
                          "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                        }
                      }
                    }
                  ]
                },
                "min": {
                  "description": "The most recent minute bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "prevDay": {
                  "description": "The previous day's bar for this ticker.",
                  "type": "object",
                  "properties": {
                    "o": {
                      "type": "number",
                      "format": "double",
                      "description": "The open price for the symbol in the given time period."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The highest price for the symbol in the given time period."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The lowest price for the symbol in the given time period."
                    },
                    "c": {
                      "type": "number",
                      "format": "double",
                      "description": "The close price for the symbol in the given time period."
                    },
                    "v": {
                      "type": "number",
                      "format": "double",
                      "description": "The trading volume of the symbol in the given time period."
                    },
                    "vw": {
                      "type": "number",
                      "format": "double",
                      "description": "The volume weighted average price."
                    }
                  }
                },
                "ticker": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "todaysChange": {
                  "type": "number",
                  "format": "double",
                  "description": "The value of the change the from previous day."
                },
                "todaysChangePerc": {
                  "type": "number",
                  "format": "double",
                  "description": "The percentage change since the previous day."
                },
                "updated": {
                  "type": "integer",
                  "description": "The last updated timestamp."
                }
              }
            }
          }
        }
      },
      "CryptoSnapshotTickerFullBook": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "ticker": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "bids": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The price of this book level."
                    },
                    "x": {
                      "type": "object",
                      "description": "A map of the exchange ID to number of shares at this price level.\n<br />\n<br />\n**Example:**\n<br />\n`{\n  \"p\": 16302.94,\n  \"x\": {\n    \"1\": 0.02859424,\n    \"6\": 0.023455\n  }\n}`\n<br />\n<br />\nIn this example, exchange ID 1 has 0.02859424 shares available at $16,302.94,\nand exchange ID 6 has 0.023455 shares at the same price level.\n"
                    }
                  }
                }
              },
              "asks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The price of this book level."
                    },
                    "x": {
                      "type": "object",
                      "description": "A map of the exchange ID to number of shares at this price level.\n<br />\n<br />\n**Example:**\n<br />\n`{\n  \"p\": 16302.94,\n  \"x\": {\n    \"1\": 0.02859424,\n    \"6\": 0.023455\n  }\n}`\n<br />\n<br />\nIn this example, exchange ID 1 has 0.02859424 shares available at $16,302.94,\nand exchange ID 6 has 0.023455 shares at the same price level.\n"
                    }
                  }
                }
              },
              "bidCount": {
                "type": "number",
                "format": "double",
                "description": "The combined total number of bids in the book."
              },
              "askCount": {
                "type": "number",
                "format": "double",
                "description": "The combined total number of asks in the book."
              },
              "spread": {
                "type": "number",
                "format": "double",
                "description": "The difference between the best bid and the best ask price accross exchanges."
              },
              "updated": {
                "type": "integer",
                "description": "The last updated timestamp."
              }
            }
          }
        }
      },
      "v3Tickers": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "An array of tickers that match your query.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.                                                                                                                                                                                                                                                                                                   \n",
            "items": {
              "type": "object",
              "properties": {
                "ticker": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n"
                },
                "market": {
                  "type": "string",
                  "description": "The market type of the asset.",
                  "enum": [
                    "stocks",
                    "crypto",
                    "fx"
                  ]
                },
                "locale": {
                  "type": "string",
                  "description": "The locale of the asset.",
                  "enum": [
                    "us",
                    "global"
                  ]
                },
                "primary_exchange": {
                  "type": "string",
                  "description": "The ISO code of the primary listing exchange for this asset."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types)."
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether or not the asset is actively traded. False means the asset has been delisted."
                },
                "currency_name": {
                  "type": "string",
                  "description": "The name of the currency that this asset is traded with."
                },
                "cik": {
                  "type": "string",
                  "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key)."
                },
                "composite_figi": {
                  "type": "string",
                  "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
                },
                "share_class_figi": {
                  "type": "string",
                  "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
                },
                "last_updated_utc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The information is accurate up to this time."
                },
                "delisted_utc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The last date that the asset was traded."
                }
              },
              "required": [
                "ticker",
                "name",
                "market",
                "locale"
              ]
            }
          }
        }
      },
      "v3TickerDetails": {
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "description": "Ticker with details.\n",
            "properties": {
              "ticker": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "name": {
                "type": "string",
                "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n"
              },
              "market": {
                "type": "string",
                "description": "The market type of the asset.",
                "enum": [
                  "stocks",
                  "crypto",
                  "fx"
                ]
              },
              "locale": {
                "type": "string",
                "description": "The locale of the asset.",
                "enum": [
                  "us",
                  "global"
                ]
              },
              "primary_exchange": {
                "type": "string",
                "description": "The ISO code of the primary listing exchange for this asset."
              },
              "type": {
                "type": "string",
                "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types)."
              },
              "active": {
                "type": "boolean",
                "description": "Whether or not the asset is actively traded. False means the asset has been delisted."
              },
              "currency_name": {
                "type": "string",
                "description": "The name of the currency that this asset is traded with."
              },
              "cik": {
                "type": "string",
                "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key)."
              },
              "composite_figi": {
                "type": "string",
                "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
              },
              "share_class_figi": {
                "type": "string",
                "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)"
              },
              "delisted_utc": {
                "type": "string",
                "format": "date-time",
                "description": "The last date that the asset was traded."
              },
              "share_class_shares_outstanding": {
                "type": "number",
                "format": "double",
                "description": "The recorded number of outstanding shares for this particular share class."
              },
              "weighted_shares_outstanding": {
                "type": "number",
                "format": "double",
                "description": "The shares outstanding calculated assuming all shares of other share classes are converted to this share class.\n"
              },
              "market_cap": {
                "type": "number",
                "format": "double",
                "description": "The most recent close price of the ticker multiplied by weighted outstanding shares."
              },
              "phone_number": {
                "type": "string",
                "description": "The phone number for the company behind this ticker."
              },
              "address": {
                "type": "object",
                "properties": {
                  "address1": {
                    "type": "string",
                    "description": "The first line of the company's headquarters address."
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the company's headquarters address."
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the company's headquarters address."
                  },
                  "postal_code": {
                    "type": "string",
                    "description": "The postal code of the company's headquarters address."
                  }
                }
              },
              "sic_code": {
                "type": "string",
                "description": "The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.\n"
              },
              "sic_description": {
                "type": "string",
                "description": "A description of this ticker's SIC code."
              },
              "ticker_root": {
                "type": "string",
                "description": "The root of a specified ticker. For example, the root of BRK.A is BRK."
              },
              "ticker_suffix": {
                "type": "string",
                "description": "The suffix of a specified ticker. For example, the suffix of BRK.A is A."
              },
              "total_employees": {
                "type": "number",
                "description": "The approximate number of employees for the company."
              },
              "list_date": {
                "type": "string",
                "description": "The date that the symbol was first publicly listed in the format YYYY-MM-DD."
              },
              "homepage_url": {
                "type": "string",
                "description": "The URL of the company's website homepage."
              },
              "description": {
                "type": "string",
                "description": "A description of the company and what they do/offer."
              },
              "branding": {
                "type": "object",
                "properties": {
                  "logo_url": {
                    "type": "string",
                    "description": "A link to this ticker's company's logo.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n"
                  },
                  "icon_url": {
                    "type": "string",
                    "description": "A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n"
                  }
                }
              }
            },
            "required": [
              "ticker",
              "name",
              "market",
              "locale",
              "active",
              "currency_name"
            ]
          }
        }
      },
      "TickerSymbol": {
        "type": "string",
        "description": "The exchange symbol that this item is traded under."
      },
      "Financials": {
        "type": "object",
        "description": "Financials",
        "required": [
          "ticker",
          "exDate",
          "paymentDate",
          "ratio",
          "tofactor",
          "forfactor"
        ],
        "properties": {
          "ticker": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          },
          "period": {
            "type": "string",
            "example": "Q",
            "description": "Reporting period.",
            "enum": [
              "Q",
              "T",
              "QA",
              "TA",
              "Y",
              "YA"
            ]
          },
          "calendarDate": {
            "type": "string",
            "format": "date-time",
            "example": "2019-03-31"
          },
          "reportPeriod": {
            "type": "string",
            "format": "date-time",
            "example": "2019-03-31"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "example": "1999-03-28"
          },
          "accumulatedOtherComprehensiveIncome": {
            "type": "integer"
          },
          "assets": {
            "type": "integer"
          },
          "assetsAverage": {
            "type": "integer"
          },
          "assetsCurrent": {
            "type": "integer"
          },
          "assetTurnover": {
            "type": "integer"
          },
          "assetsNonCurrent": {
            "type": "integer"
          },
          "bookValuePerShare": {
            "type": "number",
            "format": "double"
          },
          "capitalExpenditure": {
            "type": "integer"
          },
          "cashAndEquivalents": {
            "type": "integer"
          },
          "cashAndEquivalentsUSD": {
            "type": "integer"
          },
          "costOfRevenue": {
            "type": "integer"
          },
          "consolidatedIncome": {
            "type": "integer"
          },
          "currentRatio": {
            "type": "number",
            "format": "double"
          },
          "debtToEquityRatio": {
            "type": "number",
            "format": "double"
          },
          "debt": {
            "type": "integer"
          },
          "debtCurrent": {
            "type": "integer"
          },
          "debtNonCurrent": {
            "type": "integer"
          },
          "debtUSD": {
            "type": "integer"
          },
          "deferredRevenue": {
            "type": "integer"
          },
          "depreciationAmortizationAndAccretion": {
            "type": "integer"
          },
          "deposits": {
            "type": "integer"
          },
          "dividendYield": {
            "type": "integer"
          },
          "dividendsPerBasicCommonShare": {
            "type": "integer"
          },
          "earningBeforeInterestTaxes": {
            "type": "integer"
          },
          "earningsBeforeInterestTaxesDepreciationAmortization": {
            "type": "integer"
          },
          "EBITDAMargin": {
            "type": "number",
            "format": "double"
          },
          "earningsBeforeInterestTaxesDepreciationAmortizationUSD": {
            "type": "integer"
          },
          "earningBeforeInterestTaxesUSD": {
            "type": "integer"
          },
          "earningsBeforeTax": {
            "type": "integer"
          },
          "earningsPerBasicShare": {
            "type": "number",
            "format": "double"
          },
          "earningsPerDilutedShare": {
            "type": "number",
            "format": "double"
          },
          "earningsPerBasicShareUSD": {
            "type": "number",
            "format": "double"
          },
          "shareholdersEquity": {
            "type": "integer"
          },
          "averageEquity": {
            "type": "integer"
          },
          "shareholdersEquityUSD": {
            "type": "integer"
          },
          "enterpriseValue": {
            "type": "integer"
          },
          "enterpriseValueOverEBIT": {
            "type": "integer"
          },
          "enterpriseValueOverEBITDA": {
            "type": "number",
            "format": "double"
          },
          "freeCashFlow": {
            "type": "integer"
          },
          "freeCashFlowPerShare": {
            "type": "number",
            "format": "double"
          },
          "foreignCurrencyUSDExchangeRate": {
            "type": "integer"
          },
          "grossProfit": {
            "type": "integer"
          },
          "grossMargin": {
            "type": "number",
            "format": "double"
          },
          "goodwillAndIntangibleAssets": {
            "type": "integer"
          },
          "interestExpense": {
            "type": "integer"
          },
          "investedCapital": {
            "type": "integer"
          },
          "investedCapitalAverage": {
            "type": "integer"
          },
          "inventory": {
            "type": "integer"
          },
          "investments": {
            "type": "integer"
          },
          "investmentsCurrent": {
            "type": "integer"
          },
          "investmentsNonCurrent": {
            "type": "integer"
          },
          "totalLiabilities": {
            "type": "integer"
          },
          "currentLiabilities": {
            "type": "integer"
          },
          "liabilitiesNonCurrent": {
            "type": "integer"
          },
          "marketCapitalization": {
            "type": "integer"
          },
          "netCashFlow": {
            "type": "integer"
          },
          "netCashFlowBusinessAcquisitionsDisposals": {
            "type": "integer"
          },
          "issuanceEquityShares": {
            "type": "integer"
          },
          "issuanceDebtSecurities": {
            "type": "integer"
          },
          "paymentDividendsOtherCashDistributions": {
            "type": "integer"
          },
          "netCashFlowFromFinancing": {
            "type": "integer"
          },
          "netCashFlowFromInvesting": {
            "type": "integer"
          },
          "netCashFlowInvestmentAcquisitionsDisposals": {
            "type": "integer"
          },
          "netCashFlowFromOperations": {
            "type": "integer"
          },
          "effectOfExchangeRateChangesOnCash": {
            "type": "integer"
          },
          "netIncome": {
            "type": "integer"
          },
          "netIncomeCommonStock": {
            "type": "integer"
          },
          "netIncomeCommonStockUSD": {
            "type": "integer"
          },
          "netLossIncomeFromDiscontinuedOperations": {
            "type": "integer"
          },
          "netIncomeToNonControllingInterests": {
            "type": "integer"
          },
          "profitMargin": {
            "type": "number",
            "format": "double"
          },
          "operatingExpenses": {
            "type": "integer"
          },
          "operatingIncome": {
            "type": "integer"
          },
          "tradeAndNonTradePayables": {
            "type": "integer"
          },
          "payoutRatio": {
            "type": "integer"
          },
          "priceToBookValue": {
            "type": "number",
            "format": "double"
          },
          "priceEarnings": {
            "type": "number",
            "format": "double"
          },
          "priceToEarningsRatio": {
            "type": "number",
            "format": "double"
          },
          "propertyPlantEquipmentNet": {
            "type": "integer"
          },
          "preferredDividendsIncomeStatementImpact": {
            "type": "integer"
          },
          "sharePriceAdjustedClose": {
            "type": "number",
            "format": "double"
          },
          "priceSales": {
            "type": "number",
            "format": "double"
          },
          "priceToSalesRatio": {
            "type": "number",
            "format": "double"
          },
          "tradeAndNonTradeReceivables": {
            "type": "integer"
          },
          "accumulatedRetainedEarningsDeficit": {
            "type": "integer"
          },
          "revenues": {
            "type": "integer"
          },
          "revenuesUSD": {
            "type": "integer"
          },
          "researchAndDevelopmentExpense": {
            "type": "integer"
          },
          "returnOnAverageAssets": {
            "type": "integer"
          },
          "returnOnAverageEquity": {
            "type": "integer"
          },
          "returnOnInvestedCapital": {
            "type": "integer"
          },
          "returnOnSales": {
            "type": "number",
            "format": "double"
          },
          "shareBasedCompensation": {
            "type": "integer"
          },
          "sellingGeneralAndAdministrativeExpense": {
            "type": "integer"
          },
          "shareFactor": {
            "type": "integer"
          },
          "shares": {
            "type": "integer"
          },
          "weightedAverageShares": {
            "type": "integer"
          },
          "weightedAverageSharesDiluted": {
            "type": "integer"
          },
          "salesPerShare": {
            "type": "number",
            "format": "double"
          },
          "tangibleAssetValue": {
            "type": "integer"
          },
          "taxAssets": {
            "type": "integer"
          },
          "incomeTaxExpense": {
            "type": "integer"
          },
          "taxLiabilities": {
            "type": "integer"
          },
          "tangibleAssetsBookValuePerShare": {
            "type": "number",
            "format": "double"
          },
          "workingCapital": {
            "type": "integer"
          }
        }
      },
      "Markets": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "A list of supported markets.",
            "items": {
              "type": "object",
              "properties": {
                "market": {
                  "type": "string",
                  "description": "The name of the market."
                },
                "desc": {
                  "type": "string",
                  "description": "A description of the market."
                }
              }
            }
          }
        }
      },
      "Locales": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "locale": {
                  "type": "string",
                  "description": "An abbreviated country name."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the country."
                }
              }
            }
          }
        }
      },
      "V2News": {
        "type": "object",
        "required": [
          "id",
          "publisher",
          "title",
          "author",
          "published_utc",
          "article_url",
          "tickers"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the article.\n"
          },
          "publisher": {
            "type": "object",
            "required": [
              "name",
              "logo_url",
              "homepage_url"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "The publisher's name.\n"
              },
              "logo_url": {
                "type": "string",
                "format": "url",
                "description": "The publisher's logo URL.\n"
              },
              "homepage_url": {
                "type": "string",
                "format": "url",
                "description": "The publisher's homepage URL.\n"
              },
              "favicon_url": {
                "type": "string",
                "format": "url",
                "description": "The publisher's homepage favicon URL.\n"
              }
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the news article.\n"
          },
          "author": {
            "type": "string",
            "description": "The article's author.\n"
          },
          "published_utc": {
            "type": "string",
            "format": "date-time",
            "description": "The date the article was published on.\n"
          },
          "article_url": {
            "type": "string",
            "format": "url",
            "description": "A link to the news article.\n"
          },
          "tickers": {
            "type": "array",
            "description": "The ticker symbols associated with the article.\n",
            "items": {
              "type": "string",
              "description": "The exchange symbol that this item is traded under."
            }
          },
          "amp_url": {
            "type": "string",
            "format": "url",
            "description": "The mobile friendly Accelerated Mobile Page (AMP) URL.\n"
          },
          "image_url": {
            "type": "string",
            "format": "url",
            "description": "The article's image URL.\n"
          },
          "description": {
            "type": "string",
            "description": "A description of the article.\n"
          },
          "keywords": {
            "type": "array",
            "description": "The keywords associated with the article (which will vary depending on\nthe publishing source).\n",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StocksOpenClose": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of this request's response."
          },
          "from": {
            "type": "string",
            "format": "date",
            "description": "The requested date."
          },
          "symbol": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          },
          "open": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "high": {
            "type": "number",
            "format": "double",
            "description": "The highest price for the symbol in the given time period."
          },
          "low": {
            "type": "number",
            "format": "double",
            "description": "The lowest price for the symbol in the given time period."
          },
          "close": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "volume": {
            "type": "number",
            "format": "double",
            "description": "The trading volume of the symbol in the given time period."
          },
          "preMarket": {
            "type": "integer",
            "description": "The open price of the ticker symbol in pre-market trading."
          },
          "afterHours": {
            "type": "number",
            "format": "double",
            "description": "The close price of the ticker symbol in after hours trading."
          }
        }
      },
      "StocksV2Base": {
        "type": "object",
        "properties": {
          "T": {
            "type": "string",
            "description": "The exchange symbol that this item is traded under."
          },
          "t": {
            "type": "integer",
            "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
          },
          "y": {
            "type": "integer",
            "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
          },
          "f": {
            "type": "integer",
            "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
          },
          "q": {
            "type": "integer",
            "format": "int64",
            "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
          }
        }
      },
      "StocksV2Trade": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "T": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "t": {
                "type": "integer",
                "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
              },
              "y": {
                "type": "integer",
                "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
              },
              "f": {
                "type": "integer",
                "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
              },
              "q": {
                "type": "integer",
                "format": "int64",
                "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "c": {
                "type": "array",
                "description": "A list of condition codes.\n",
                "items": {
                  "type": "integer",
                  "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                }
              },
              "i": {
                "type": "string",
                "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
              },
              "p": {
                "type": "number",
                "format": "double",
                "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
              },
              "s": {
                "type": "number",
                "format": "double",
                "description": "The size of a trade (also known as volume).\n"
              },
              "e": {
                "type": "integer",
                "description": "The trade correction indicator.\n"
              },
              "x": {
                "type": "integer",
                "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
              },
              "r": {
                "type": "integer",
                "description": "The ID for the Trade Reporting Facility where the trade took place.\n"
              },
              "z": {
                "type": "integer",
                "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
              }
            }
          }
        ]
      },
      "StocksV2Trades": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "T": {
                      "type": "string",
                      "description": "The exchange symbol that this item is traded under."
                    },
                    "t": {
                      "type": "integer",
                      "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                    },
                    "y": {
                      "type": "integer",
                      "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                    },
                    "f": {
                      "type": "integer",
                      "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                    },
                    "q": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "c": {
                      "type": "array",
                      "description": "A list of condition codes.\n",
                      "items": {
                        "type": "integer",
                        "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                      }
                    },
                    "i": {
                      "type": "string",
                      "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                    },
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                    },
                    "s": {
                      "type": "number",
                      "format": "double",
                      "description": "The size of a trade (also known as volume).\n"
                    },
                    "e": {
                      "type": "integer",
                      "description": "The trade correction indicator.\n"
                    },
                    "x": {
                      "type": "integer",
                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                    },
                    "r": {
                      "type": "integer",
                      "description": "The ID for the Trade Reporting Facility where the trade took place.\n"
                    },
                    "z": {
                      "type": "integer",
                      "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "StocksV2NBBO": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "T": {
                "type": "string",
                "description": "The exchange symbol that this item is traded under."
              },
              "t": {
                "type": "integer",
                "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
              },
              "y": {
                "type": "integer",
                "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
              },
              "f": {
                "type": "integer",
                "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
              },
              "q": {
                "type": "integer",
                "format": "int64",
                "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "c": {
                "type": "array",
                "description": "A list of condition codes.\n",
                "items": {
                  "type": "integer",
                  "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                }
              },
              "i": {
                "type": "array",
                "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                "items": {
                  "type": "integer",
                  "description": "The indicator code.\n"
                }
              },
              "p": {
                "type": "number",
                "format": "double",
                "description": "The bid price."
              },
              "s": {
                "type": "integer",
                "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
              },
              "x": {
                "allOf": [
                  {
                    "type": "integer",
                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                  },
                  {
                    "description": "Bid Exchange Id"
                  }
                ]
              },
              "P": {
                "type": "number",
                "format": "double",
                "description": "The ask price."
              },
              "S": {
                "type": "integer",
                "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
              },
              "X": {
                "allOf": [
                  {
                    "type": "integer",
                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                  },
                  {
                    "description": "Ask Exchange Id"
                  }
                ]
              },
              "z": {
                "type": "integer",
                "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
              }
            }
          }
        ]
      },
      "StocksV2NBBOs": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "T": {
                      "type": "string",
                      "description": "The exchange symbol that this item is traded under."
                    },
                    "t": {
                      "type": "integer",
                      "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it."
                    },
                    "y": {
                      "type": "integer",
                      "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange."
                    },
                    "f": {
                      "type": "integer",
                      "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message."
                    },
                    "q": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "c": {
                      "type": "array",
                      "description": "A list of condition codes.\n",
                      "items": {
                        "type": "integer",
                        "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                      }
                    },
                    "i": {
                      "type": "array",
                      "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                      "items": {
                        "type": "integer",
                        "description": "The indicator code.\n"
                      }
                    },
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The bid price."
                    },
                    "s": {
                      "type": "integer",
                      "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
                    },
                    "x": {
                      "allOf": [
                        {
                          "type": "integer",
                          "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                        },
                        {
                          "description": "Bid Exchange Id"
                        }
                      ]
                    },
                    "P": {
                      "type": "number",
                      "format": "double",
                      "description": "The ask price."
                    },
                    "S": {
                      "type": "integer",
                      "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
                    },
                    "X": {
                      "allOf": [
                        {
                          "type": "integer",
                          "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                        },
                        {
                          "description": "Ask Exchange Id"
                        }
                      ]
                    },
                    "z": {
                      "type": "integer",
                      "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "ForexConversion": {
        "type": "object",
        "properties": {
          "last": {
            "type": "object",
            "properties": {
              "ask": {
                "type": "number",
                "format": "double",
                "description": "The ask price."
              },
              "bid": {
                "type": "number",
                "format": "double",
                "description": "The bid price."
              },
              "exchange": {
                "type": "integer",
                "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
              },
              "timestamp": {
                "type": "integer",
                "description": "The Unix Msec timestamp for the start of the aggregate window."
              }
            }
          },
          "from": {
            "type": "string",
            "description": "The \"from\" currency symbol."
          },
          "to": {
            "type": "string",
            "description": "The \"to\" currency symbol."
          },
          "initialAmount": {
            "type": "number",
            "format": "double",
            "description": "The amount to convert."
          },
          "converted": {
            "type": "number",
            "format": "double",
            "description": "The result of the conversion."
          }
        }
      },
      "ForexHistoricTrades": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "description": "The date that was evaluated from the request."
          },
          "map": {
            "type": "object",
            "description": "A map for shortened result keys."
          },
          "msLatency": {
            "type": "integer",
            "description": "The milliseconds of latency for the query results."
          },
          "pair": {
            "type": "string",
            "description": "The currency pair that was evaluated from the request."
          },
          "ticks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "a": {
                  "type": "number",
                  "format": "double",
                  "description": "The ask price."
                },
                "b": {
                  "type": "number",
                  "format": "double",
                  "description": "The bid price."
                },
                "x": {
                  "type": "integer",
                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                }
              }
            }
          }
        }
      },
      "ForexPairLastQuote": {
        "type": "object",
        "properties": {
          "last": {
            "type": "object",
            "properties": {
              "ask": {
                "type": "number",
                "format": "double",
                "description": "The ask price."
              },
              "bid": {
                "type": "number",
                "format": "double",
                "description": "The bid price."
              },
              "exchange": {
                "type": "integer",
                "description": "The exchange ID. See <a href=\"https://polygon.io/docs/forex/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
              },
              "timestamp": {
                "type": "integer",
                "description": "The Unix Msec timestamp for the start of the aggregate window."
              }
            }
          },
          "symbol": {
            "type": "string",
            "description": "The symbol pair that was evaluated from the request."
          }
        }
      },
      "ForexPreviousClose": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "T": {
                  "type": "string",
                  "description": "The exchange symbol that this item is traded under."
                },
                "v": {
                  "type": "number",
                  "format": "double",
                  "description": "The trading volume of the symbol in the given time period."
                },
                "o": {
                  "type": "number",
                  "format": "double",
                  "description": "The open price for the symbol in the given time period."
                },
                "c": {
                  "type": "number",
                  "format": "double",
                  "description": "The close price for the symbol in the given time period."
                },
                "h": {
                  "type": "number",
                  "format": "double",
                  "description": "The highest price for the symbol in the given time period."
                },
                "l": {
                  "type": "number",
                  "format": "double",
                  "description": "The lowest price for the symbol in the given time period."
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "vw": {
                  "type": "number",
                  "format": "double",
                  "description": "The volume weighted average price."
                },
                "n": {
                  "type": "number",
                  "description": "The number of transactions in the aggregate window."
                }
              }
            }
          }
        }
      },
      "CryptoExchange": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
            },
            "type": {
              "type": "string",
              "description": "Type of exchange feed"
            },
            "market": {
              "type": "string",
              "description": "Market data type this exchange contains ( crypto only currently )"
            },
            "name": {
              "type": "string",
              "description": "Name of the exchange"
            },
            "url": {
              "type": "string",
              "description": "URL of this exchange"
            }
          }
        }
      },
      "CryptoTradeExchange": {
        "type": "integer",
        "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
      },
      "CryptoHistoricTrades": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "description": "The date that was evaluated from the request."
          },
          "map": {
            "type": "object",
            "description": "A map for shortened result keys."
          },
          "msLatency": {
            "type": "integer",
            "description": "The milliseconds of latency for the query results."
          },
          "symbol": {
            "type": "string",
            "description": "The symbol pair that was evaluated from the request."
          },
          "ticks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "p": {
                  "type": "number",
                  "format": "double",
                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                },
                "s": {
                  "type": "number",
                  "format": "double",
                  "description": "The size of a trade (also known as volume).\n"
                },
                "x": {
                  "type": "integer",
                  "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                },
                "c": {
                  "type": "array",
                  "description": "A list of condition codes.\n",
                  "items": {
                    "type": "integer",
                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                  }
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "i": {
                  "type": "string",
                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                }
              }
            }
          }
        }
      },
      "CryptoLastTrade": {
        "type": "object",
        "properties": {
          "last": {
            "type": "object",
            "properties": {
              "conditions": {
                "type": "array",
                "description": "A list of condition codes.\n",
                "items": {
                  "type": "integer",
                  "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                }
              },
              "exchange": {
                "type": "integer",
                "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
              },
              "price": {
                "type": "number",
                "format": "double",
                "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
              },
              "size": {
                "type": "number",
                "format": "double",
                "description": "The size of a trade (also known as volume).\n"
              },
              "timestamp": {
                "type": "integer",
                "description": "The Unix Msec timestamp for the start of the aggregate window."
              }
            }
          },
          "symbol": {
            "type": "string",
            "description": "The symbol pair that was evaluated from the request."
          }
        }
      },
      "CryptoOpenClose": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "The symbol pair that was evaluated from the request."
          },
          "isUTC": {
            "type": "boolean",
            "description": "Whether or not the timestamps are in UTC timezone."
          },
          "day": {
            "type": "string",
            "format": "date",
            "description": "The date requested."
          },
          "open": {
            "type": "number",
            "format": "double",
            "description": "The open price for the symbol in the given time period."
          },
          "close": {
            "type": "number",
            "format": "double",
            "description": "The close price for the symbol in the given time period."
          },
          "openTrades": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "p": {
                  "type": "number",
                  "format": "double",
                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                },
                "s": {
                  "type": "number",
                  "format": "double",
                  "description": "The size of a trade (also known as volume).\n"
                },
                "x": {
                  "type": "integer",
                  "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                },
                "c": {
                  "type": "array",
                  "description": "A list of condition codes.\n",
                  "items": {
                    "type": "integer",
                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                  }
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "i": {
                  "type": "string",
                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                }
              }
            }
          },
          "closingTrades": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "p": {
                  "type": "number",
                  "format": "double",
                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
                },
                "s": {
                  "type": "number",
                  "format": "double",
                  "description": "The size of a trade (also known as volume).\n"
                },
                "x": {
                  "type": "integer",
                  "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
                },
                "c": {
                  "type": "array",
                  "description": "A list of condition codes.\n",
                  "items": {
                    "type": "integer",
                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
                  }
                },
                "t": {
                  "type": "integer",
                  "description": "The Unix Msec timestamp for the start of the aggregate window."
                },
                "i": {
                  "type": "string",
                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
                }
              }
            }
          }
        }
      },
      "CryptoTick": {
        "type": "object",
        "properties": {
          "p": {
            "type": "number",
            "format": "double",
            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n"
          },
          "s": {
            "type": "number",
            "format": "double",
            "description": "The size of a trade (also known as volume).\n"
          },
          "x": {
            "type": "integer",
            "description": "The exchange that this crypto trade happened on.  \nSee <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.\n"
          },
          "c": {
            "type": "array",
            "description": "A list of condition codes.\n",
            "items": {
              "type": "integer",
              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n"
            }
          },
          "t": {
            "type": "integer",
            "description": "The Unix Msec timestamp for the start of the aggregate window."
          },
          "i": {
            "type": "string",
            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n"
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found"
      },
      "Conflict": {
        "description": "Parameter is invalid or incorrect."
      },
      "Unauthorized": {
        "description": "Unauthorized - Check our API Key and account status"
      },
      "DefaultError": {
        "description": "Unexpected error"
      }
    },
    "parameters": {
      "TickersQueryParam": {
        "name": "tickers",
        "in": "query",
        "description": "A comma separated list of tickers to get snapshots for.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "GeneralTickerPathParam": {
        "name": "ticker",
        "in": "path",
        "description": "The ticker symbol of the asset.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "AAPL"
      },
      "StocksTickerPathParam": {
        "name": "stocksTicker",
        "in": "path",
        "description": "The ticker symbol of the stock/equity.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "AAPL"
      },
      "OptionsTickerPathParam": {
        "name": "optionsTicker",
        "in": "path",
        "description": "The ticker symbol of the options contract.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "O:TSLA210903C00700000"
      },
      "ForexTickerPathParam": {
        "name": "forexTicker",
        "in": "path",
        "description": "The ticker symbol of the currency pair.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "C:EURUSD"
      },
      "CryptoTickerPathParam": {
        "name": "cryptoTicker",
        "in": "path",
        "description": "The ticker symbol of the currency pair.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "X:BTCUSD"
      },
      "AggregateMultiplier": {
        "name": "multiplier",
        "in": "path",
        "description": "The size of the timespan multiplier.",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "example": 1
      },
      "AggregateTimespan": {
        "name": "timespan",
        "in": "path",
        "description": "The size of the time window.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "minute",
            "hour",
            "day",
            "week",
            "month",
            "quarter",
            "year"
          ]
        },
        "example": "day"
      },
      "AggregateTimeFrom": {
        "name": "from",
        "in": "path",
        "description": "The start of the aggregate time window.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "2021-07-22"
      },
      "AggregateTimeTo": {
        "name": "to",
        "in": "path",
        "description": "The end of the aggregate time window.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "2021-07-22"
      },
      "AggregateAdjusted": {
        "name": "adjusted",
        "in": "query",
        "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "example": true
      },
      "AggregateSort": {
        "name": "sort",
        "schema": {
          "enum": [
            "asc",
            "desc"
          ]
        },
        "in": "query",
        "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
        "example": "asc"
      },
      "AggregateDate": {
        "name": "date",
        "in": "path",
        "description": "The beginning date for the aggregate window.",
        "required": true,
        "schema": {
          "type": "string"
        },
        "example": "2020-10-14"
      },
      "ReverseOrder": {
        "name": "reverse",
        "in": "query",
        "description": "Reverse the order of the results.\n",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "example": true
      },
      "SnapshotDirection": {
        "name": "direction",
        "in": "path",
        "description": "The direction of the snapshot results to return.\n",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "gainers",
            "losers"
          ]
        },
        "example": "gainers"
      },
      "LimitMax50000": {
        "name": "limit",
        "in": "query",
        "description": "Limit the size of the response, max 50000 and default 5000.",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 10
      },
      "AggregateLimitMax50000": {
        "name": "limit",
        "in": "query",
        "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 120
      },
      "LimitMax10000": {
        "name": "limit",
        "in": "query",
        "description": "Limit the size of the response, max 10000.",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 100
      },
      "LimitNoMax": {
        "name": "limit",
        "in": "query",
        "description": "Limit the number of results.\n",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "example": 5
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "apiKey",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKey": []
    }
  ]
}